Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\pic16F622A.production.sym \
  --cmf=dist/default/production\pic16F622A.production.cmf -z -Q16C622A \
  -oC:\Users\FOMONS~1\AppData\Local\Temp\s8l4.2 \
  -Mdist/default/production/pic16F622A.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=04Ah-06fh -pstack=STACK -ACODE=00h-07FFh \
  -ASTRCODE=00h-07FFh -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 \
  -AENTRY=00h-0FFhx8 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0BFh \
  -ARAM=020h-06Fh,0A0h-0BFh -AABS1=020h-07Fh,0A0h-0BFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -preset_vec=00h,intentry=04h,init,end_init \
  -ppowerup=CODE -pcinit=CODE -pfunctab=ENTRY -ACONFIG=02007h-02007h \
  -pconfig=CONFIG -DCONFIG=2 -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\FOMONS~1\AppData\Local\Temp\s8l4.o \
  dist/default/production\pic16F622A.production.o 

Object code version is 3.11

Machine type is 16C622A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\FOMONS~1\AppData\Local\Temp\s8l4.o
                end_init                              F        F        1        8       0
                reset_vec                             0        0        1        0       0
dist/default/production\pic16F622A.production.o
                cinit                                10       10       21        8       0
                intentry                              4        4        B        8       0
                text6                               2E0      2E0       8C      5C0       0
                text5                               400      400       3D      5C0       0
                text4                               480      480        1      5C0       0
                text3                               3C0      3C0       40      5C0       0
                text2                               43D      43D       30      5C0       0
                text1                               36C      36C       54      5C0       0
                maintext                             31       31      144        8       0
                cstackBANK0                          20       20       12       20       1
                cstackCOMMON                         70       70        9       70       1
                clrtext                             478      478        8      5C0       0
                dataBANK0                            3E       3E        B       20       1
                bssBANK0                             32       32        C       20       1
                bssCOMMON                            79       79        4       70       1
                nvBANK0                              49       49        1       20       1
                strings                             200      200       E0      400       0
                idataBANK0                          46D      46D        B      5C0       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              F        F        1         0
                cinit                                10       10       21         0
                intentry                              4        4        B         0
                reset_vec                             0        0        1         0
                text6                               2E0      2E0       8C         0
                text5                               400      400       3D         0
                text4                               480      480        1         0
                text3                               3C0      3C0       40         0
                text2                               43D      43D       30         0
                text1                               36C      36C       54         0
                maintext                             31       31      144         0
                clrtext                             478      478        8         0
                idataBANK0                          46D      46D        B         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             200      200       E0         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                bssCOMMON                            79       79        4         1

        CLASS   BANK0          
                cstackBANK0                          20       20       12         1
                dataBANK0                            3E       3E        B         1
                bssBANK0                             32       32        C         1
                nvBANK0                              49       49        1         1

        CLASS   BANK1          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  000171  000175         8       0  CODE        2
                cstackBANK0                    000020  00002A  00004A        20       1  BANK0       1
                cstackCOMMON                   000070  00000D  00007D        70       1  COMMON      1
                strings                        000200  0000E0  0002E0       400       0  STRING      2
                text6                          0002E0  0001A1  000481       5C0       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            04A-06F            26           1
        BANK1            0A0-0BF            20           1
        CODE             001-003             3           2
                         175-1FF            8B
                         481-7FF           37F
        COMMON           07D-07D             1           1
        CONFIG           2007-2007             1           2
        CONST            001-003             3           2
                         175-1FF            8B
                         481-7FF           100
        ENTRY            001-003             3           2
                         175-1FF            8B
                         481-7FF           100
        IDLOC            2000-2003             4           2
        RAM              04A-06F            26           1
                         0A0-0BF            20
        SFR0             000-01F            20           1
        SFR1             080-09F            20           1
        STACK            04A-06F            26           1
        STRCODE          001-003             3           2
                         175-1FF            8B
                         481-7FF           37F
        STRING           001-003             3           2
                         175-1FF            8B
                         481-7FF           100

                                  Symbol Table

_GIE                                (abs)        05F
_PORTA                              (abs)        005
_PORTAbits                          (abs)        005
_PORTB                              (abs)        006
_PSA                                (abs)        40B
_RA1                                (abs)        029
_RA2                                (abs)        02A
_T0CS                               (abs)        40D
_T0IE                               (abs)        05D
_T0IF                               (abs)        05A
_T0SE                               (abs)        40C
_TMR0                               (abs)        001
_TRISA0                             (abs)        428
_TRISA1                             (abs)        429
_TRISA2                             (abs)        42A
_TRISA3                             (abs)        42B
_TRISA4                             (abs)        42C
_TRISB                              (abs)        086
__Habs1                             abs1         000
__Hbank0                            bank0        000
__Hbank1                            bank1        000
__HbssBANK0                         bssBANK0     000
__HbssCOMMON                        bssCOMMON    000
__Hcinit                            cinit        031
__Hclrtext                          clrtext      000
__Hcode                             code         000
__Hcommon                           common       000
__Hconfig                           config       000
__HcstackBANK0                      cstackBANK0  000
__HcstackCOMMON                     cstackCOMMON 000
__HdataBANK0                        dataBANK0    000
__Heeprom_data                      eeprom_data  000
__Hend_init                         end_init     010
__Hfunctab                          functab      000
__HidataBANK0                       idataBANK0   000
__Hidloc                            idloc        000
__Hinit                             init         00F
__Hintentry                         intentry     00F
__Hmaintext                         maintext     000
__HnvBANK0                          nvBANK0      000
__Hpowerup                          powerup      000
__Hram                              ram          000
__Hreset_vec                        reset_vec    001
__Hsfr0                             sfr0         000
__Hsfr1                             sfr1         000
__Hspace_0                          (abs)        481
__Hspace_1                          (abs)        07D
__Hspace_2                          (abs)        000
__Hspace_3                          (abs)        000
__Hstack                            stack        000
__Hstrings                          strings      000
__Htext                             text         000
__Labs1                             abs1         000
__Lbank0                            bank0        000
__Lbank1                            bank1        000
__LbssBANK0                         bssBANK0     000
__LbssCOMMON                        bssCOMMON    000
__Lcinit                            cinit        010
__Lclrtext                          clrtext      000
__Lcode                             code         000
__Lcommon                           common       000
__Lconfig                           config       000
__LcstackBANK0                      cstackBANK0  000
__LcstackCOMMON                     cstackCOMMON 000
__LdataBANK0                        dataBANK0    000
__Leeprom_data                      eeprom_data  000
__Lend_init                         end_init     00F
__Lfunctab                          functab      000
__LidataBANK0                       idataBANK0   000
__Lidloc                            idloc        000
__Linit                             init         00F
__Lintentry                         intentry     004
__Lmaintext                         maintext     000
__LnvBANK0                          nvBANK0      000
__Lpowerup                          powerup      000
__Lram                              ram          000
__Lreset_vec                        reset_vec    000
__Lsfr0                             sfr0         000
__Lsfr1                             sfr1         000
__Lspace_0                          (abs)        000
__Lspace_1                          (abs)        000
__Lspace_2                          (abs)        000
__Lspace_3                          (abs)        000
__Lstack                            stack        000
__Lstrings                          strings      000
__Ltext                             text         000
__S0                                (abs)        481
__S1                                (abs)        07D
__S2                                (abs)        000
___int_sp                           stack        000
___latbits                          (abs)        000
___sp                               stack        000
__end_of__initialization            cinit        02F
__end_of__stringtab                 strings      206
__end_of_calculateBitsFromTable     text5        43D
__end_of_codeToMatrix               strings      286
__end_of_importantKeys              strings      2DA
__end_of_kempstonMouseKeys          strings      2E0
__end_of_main                       maintext     175
__end_of_myDelay                    text4        481
__end_of_myIsr                      text6        36C
__end_of_replaceOnDelayKeyDown      strings      2D4
__end_of_replaceOnShiftKeyDown      strings      2B0
__end_of_replaceTwoBytesCodes       strings      2CC
__end_of_sendDataToAltera           text3        400
__end_of_updateKey                  text1        3C0
__end_of_updatePort                 text2        46D
__initialization                    cinit        010
__pbssBANK0                         bssBANK0     032
__pbssCOMMON                        bssCOMMON    079
__pcstackBANK0                      cstackBANK0  020
__pcstackCOMMON                     cstackCOMMON 070
__pdataBANK0                        dataBANK0    03E
__pidataBANK0                       idataBANK0   46D
__pintentry                         intentry     004
__pmaintext                         maintext     031
__pnvBANK0                          nvBANK0      049
__pstrings                          strings      200
__ptext1                            text1        36C
__ptext2                            text2        43D
__ptext3                            text3        3C0
__ptext4                            text4        480
__ptext5                            text5        400
__ptext6                            text6        2E0
__size_of_calculateBitsFromTable    (abs)        000
__size_of_main                      (abs)        000
__size_of_myDelay                   (abs)        000
__size_of_myIsr                     (abs)        000
__size_of_sendDataToAltera          (abs)        000
__size_of_updateKey                 (abs)        000
__size_of_updatePort                (abs)        000
__stringbase                        strings      205
__stringtab                         strings      200
_calculateBitsFromTable             text5        400
_codeToMatrix                       strings      206
_delay                              bssBANK0     034
_delayedKey                         bssBANK0     036
_importantKeys                      strings      2D4
_kempstonMouseEmulatorDelay         bssBANK0     032
_kempstonMouseEmulatorKeys          bssBANK0     03C
_kempstonMouseKeys                  strings      2DA
_main                               maintext     031
_myDelay                            text4        480
_myIsr                              text6        2E0
_myIsr$87                           cstackCOMMON 076
_numLock                            bssBANK0     038
_outPorts                           dataBANK0    03E
_ps2Bits                            bssCOMMON    07B
_ps2BitsCount                       bssCOMMON    07A
_ps2Data                            bssBANK0     03B
_ps2DataState                       bssCOMMON    07C
_ps2Device                          bssBANK0     03A
_ps2Down                            nvBANK0      049
_ps2NeedEncode                      bssCOMMON    079
_ps2WaitCode                        bssBANK0     039
_replaceOnDelayKeyDown              strings      2CC
_replaceOnShiftKeyDown              strings      286
_replaceTwoBytesCodes               strings      2B0
_replaced                           bssBANK0     037
_sendDataToAltera                   text3        3C0
_sendDataToAltera$104               cstackBANK0  022
_shift_ctrl_alt                     bssBANK0     03D
_updateKey                          text1        36C
_updateKey$97                       cstackBANK0  029
_updatePort                         text2        43D
btemp                               (abs)        07E
calculateBitsFromTable@bits         cstackBANK0  025
calculateBitsFromTable@clearIfFound cstackBANK0  022
calculateBitsFromTable@count        cstackBANK0  021
calculateBitsFromTable@i            cstackBANK0  026
calculateBitsFromTable@table        cstackBANK0  020
clear_ram0                          clrtext      478
end_of_initialization               cinit        02F
interrupt_function                  intentry     004
intlevel0                           functab      000
intlevel1                           functab      000
intlevel2                           functab      000
intlevel3                           functab      000
intlevel4                           functab      000
intlevel5                           functab      000
main@i                              cstackBANK0  031
main@i_118                          cstackBANK0  030
myIsr@i                             cstackCOMMON 078
reset_vec                           reset_vec    000
saved_w                             (abs)        07E
sendDataToAltera@i                  cstackBANK0  024
stackhi                             (abs)        000
stacklo                             (abs)        000
start                               init         00F
start_initialization                cinit        010
updateKey@code                      cstackBANK0  02C
updateKey@key                       cstackBANK0  02B
updateKey@localCtrl                 cstackBANK0  02A
updateKey@localShift                cstackBANK0  028
updateKey@set                       cstackBANK0  026
updatePort@a                        cstackBANK0  024
updatePort@bit_id                   cstackBANK0  025
updatePort@set                      cstackBANK0  020
wtemp0                              (abs)        07E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 350 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   16[BANK0 ] char 
  i               1   17[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       2       0
      Temps:          0       3       0
      Totals:         0       5       0
Total ram usage:        5 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_calculateBitsFromTable
		_sendDataToAltera
		_updateKey
		_updatePort
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _updateKey *****************
 Defined at:
		line 178 in file "main.c"
 Parameters:    Size  Location     Type
  key             1    wreg     unsigned char 
  set             1    6[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  key             1   11[BANK0 ] unsigned char 
  code            1   12[BANK0 ] unsigned char 
  localCtrl       1   10[BANK0 ] unsigned char 
  localShift      1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0       5       0
      Temps:          0       1       0
      Totals:         0       7       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_updatePort
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _updatePort *****************
 Defined at:
		line 169 in file "main.c"
 Parameters:    Size  Location     Type
  bit_id          1    wreg     unsigned char 
  set             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  bit_id          1    5[BANK0 ] unsigned char 
  a               1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0       2       0
      Temps:          0       3       0
      Totals:         0       6       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_updateKey
		_main
 This function uses a non-reentrant model


 *************** function _sendDataToAltera *****************
 Defined at:
		line 229 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    4[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       3       0
      Temps:          0       2       0
      Totals:         0       5       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_myDelay
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _myDelay *****************
 Defined at:
		line 197 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_sendDataToAltera
 This function uses a non-reentrant model


 *************** function _calculateBitsFromTable *****************
 Defined at:
		line 300 in file "main.c"
 Parameters:    Size  Location     Type
  bits            1    wreg     PTR unsigned char 
		 -> kempstonMouseEmulatorKeys(1), shift_ctrl_alt(1), 
  table           1    0[BANK0 ] PTR unsigned char 
		 -> kempstonMouseKeys(6), importantKeys(6), 
  count           1    1[BANK0 ] unsigned char 
  clearIfFound    1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  bits            1    5[BANK0 ] PTR unsigned char 
		 -> kempstonMouseEmulatorKeys(1), shift_ctrl_alt(1), 
  i               1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       3       0
      Locals:         0       2       0
      Temps:          0       2       0
      Totals:         0       7       0
Total ram usage:        7 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _myIsr *****************
 Defined at:
		line 102 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    8[COMMON] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         3       0       0
      Temps:          6       0       0
      Totals:         9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__stringtab    		STRING         	0200	0000	7
		_kempstonMouseKeys		STRING         	02DA	0000	7
		_codeToMatrix  		STRING         	0206	0000	129
		_importantKeys 		STRING         	02D4	0000	7
		_replaceTwoBytesCodes		STRING         	02B0	0000	29
		__initialization		CODE           	0010	0000	32
		_replaceOnShiftKeyDown		STRING         	0286	0000	43
		_replaceOnDelayKeyDown		STRING         	02CC	0000	9

shared estimated size: 263

main.c
		_updatePort    		CODE           	043D	0000	49
		_main          		CODE           	0031	0000	325
		_calculateBitsFromTable		CODE           	0400	0000	62
		_myIsr         		CODE           	02E0	0000	141
		_myDelay       		CODE           	0480	0000	2
		_updateKey     		CODE           	036C	0000	85
		_sendDataToAltera		CODE           	03C0	0000	65

main.c estimated size: 729

