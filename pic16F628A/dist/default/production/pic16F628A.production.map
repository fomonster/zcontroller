Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\pic16F628A.production.sym \
  --cmf=dist/default/production\pic16F628A.production.cmf -z -Q16F628A \
  -oC:\Users\FOMONS~1\AppData\Local\Temp\sfn0.2 \
  -Mdist/default/production/pic16F628A.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0A0h-0efh -pstack=STACK -ACODE=00h-07FFh \
  -ASTRCODE=00h-07FFh -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 \
  -AENTRY=00h-0FFhx8 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0120h-014Fh -ARAM=020h-06Fh,0A0h-0EFh,0120h-014Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-014Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-07Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\FOMONS~1\AppData\Local\Temp\sfn0.o \
  dist/default/production\pic16F628A.production.o 

Object code version is 3.11

Machine type is 16F628A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\FOMONS~1\AppData\Local\Temp\sfn0.o
                end_init                             10       10        1        8       0
                reset_vec                             0        0        1        0       0
dist/default/production\pic16F628A.production.o
                cinit                                11       11       21        8       0
                intentry                              4        4        C        8       0
                text6                               2E0      2E0       A2      5C0       0
                text5                               41F      41F       45      5C0       0
                text4                               4A8      4A8        1      5C0       0
                text3                               3D5      3D5       4A      5C0       0
                text2                               464      464       31      5C0       0
                text1                               382      382       53      5C0       0
                maintext                             32       32      1C3        8       0
                cstackBANK0                          20       20       18       20       1
                cstackCOMMON                         70       70        9       70       1
                clrtext                             4A0      4A0        8      5C0       0
                dataBANK0                            4F       4F        B       20       1
                bssBANK0                             38       38       17       20       1
                bssCOMMON                            79       79        5       70       1
                strings                             200      200       E0      400       0
                idataBANK0                          495      495        B      5C0       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        1         0
                cinit                                11       11       21         0
                intentry                              4        4        C         0
                reset_vec                             0        0        1         0
                text6                               2E0      2E0       A2         0
                text5                               41F      41F       45         0
                text4                               4A8      4A8        1         0
                text3                               3D5      3D5       4A         0
                text2                               464      464       31         0
                text1                               382      382       53         0
                maintext                             32       32      1C3         0
                clrtext                             4A0      4A0        8         0
                idataBANK0                          495      495        B         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             200      200       E0         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                bssCOMMON                            79       79        5         1

        CLASS   BANK0          
                cstackBANK0                          20       20       18         1
                dataBANK0                            4F       4F        B         1
                bssBANK0                             38       38       17         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  0001F1  0001F5         8       0  CODE        2
                cstackBANK0                    000020  00003A  00005A        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                strings                        000200  0000E0  0002E0       400       0  STRING      2
                text6                          0002E0  0001C9  0004A9       5C0       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            05A-06F            16           1
        BANK1            0A0-0EF            50           1
        BANK2            120-14F            30           1
        CODE             001-003             3           2
                         1F5-1FF             B
                         4A9-7FF           357
        CONFIG           2007-2007             1           2
        CONST            001-003             3           2
                         1F5-1FF             B
                         4A9-7FF           100
        EEDATA           2100-217F            80           2
        ENTRY            001-003             3           2
                         1F5-1FF             B
                         4A9-7FF           100
        IDLOC            2000-2003             4           2
        RAM              05A-06F            16           1
                         0A0-0EF            50
                         120-14F            30
        SFR0             000-01F            20           1
        SFR1             080-09F            20           1
        SFR2             100-11F            20           1
        SFR3             180-1EF            70           1
        STACK            0A0-0EF            50           1
        STRCODE          001-003             3           2
                         1F5-1FF             B
                         4A9-7FF           357
        STRING           001-003             3           2
                         1F5-1FF             B
                         4A9-7FF           100

                                  Symbol Table

_CCP1CON                            (abs)        017
_CCP1IE                             (abs)        462
_CCP1IF                             (abs)        062
_CCPR1H                             (abs)        016
_CCPR1L                             (abs)        015
_CMCON                              (abs)        01F
_CMIE                               (abs)        466
_CMIF                               (abs)        066
_EEIE                               (abs)        467
_EEIF                               (abs)        067
_GIE                                (abs)        05F
_INTE                               (abs)        05C
_INTEDG                             (abs)        40E
_INTF                               (abs)        059
_PEIE                               (abs)        05E
_PORTA                              (abs)        005
_PORTAbits                          (abs)        005
_PORTB                              (abs)        006
_PS0                                (abs)        408
_PS1                                (abs)        409
_PS2                                (abs)        40A
_PSA                                (abs)        40B
_RA1                                (abs)        029
_RA2                                (abs)        02A
_RBIE                               (abs)        05B
_RBIF                               (abs)        058
_RCIE                               (abs)        465
_RCIF                               (abs)        065
_RCSTA                              (abs)        018
_SPEN                               (abs)        0C7
_T0CS                               (abs)        40D
_T0IE                               (abs)        05D
_T0IF                               (abs)        05A
_T0SE                               (abs)        40C
_T1CON                              (abs)        010
_TMR0                               (abs)        001
_TMR1H                              (abs)        00F
_TMR1IE                             (abs)        460
_TMR1IF                             (abs)        060
_TMR1L                              (abs)        00E
_TMR2                               (abs)        011
_TMR2IE                             (abs)        461
_TMR2IF                             (abs)        061
_TRISA0                             (abs)        428
_TRISA1                             (abs)        429
_TRISA2                             (abs)        42A
_TRISA3                             (abs)        42B
_TRISA4                             (abs)        42C
_TRISA5                             (abs)        42D
_TRISA6                             (abs)        42E
_TRISA7                             (abs)        42F
_TRISB                              (abs)        086
_TXIE                               (abs)        464
_TXIF                               (abs)        064
_TXSTA                              (abs)        098
_VRCON                              (abs)        09F
__Habs1                             abs1         000
__Hbank0                            bank0        000
__Hbank1                            bank1        000
__Hbank2                            bank2        000
__Hbank3                            bank3        000
__HbssBANK0                         bssBANK0     000
__HbssCOMMON                        bssCOMMON    000
__Hcinit                            cinit        032
__Hclrtext                          clrtext      000
__Hcode                             code         000
__Hcommon                           common       000
__Hconfig                           config       000
__HcstackBANK0                      cstackBANK0  000
__HcstackCOMMON                     cstackCOMMON 000
__HdataBANK0                        dataBANK0    000
__Heeprom_data                      eeprom_data  000
__Hend_init                         end_init     011
__Hfunctab                          functab      000
__HidataBANK0                       idataBANK0   000
__Hidloc                            idloc        000
__Hinit                             init         010
__Hintentry                         intentry     010
__Hmaintext                         maintext     000
__Hpowerup                          powerup      000
__Hram                              ram          000
__Hreset_vec                        reset_vec    001
__Hsfr0                             sfr0         000
__Hsfr1                             sfr1         000
__Hsfr2                             sfr2         000
__Hsfr3                             sfr3         000
__Hspace_0                          (abs)        4A9
__Hspace_1                          (abs)        07E
__Hspace_2                          (abs)        000
__Hspace_3                          (abs)        000
__Hstack                            stack        000
__Hstrings                          strings      000
__Htext                             text         000
__Labs1                             abs1         000
__Lbank0                            bank0        000
__Lbank1                            bank1        000
__Lbank2                            bank2        000
__Lbank3                            bank3        000
__LbssBANK0                         bssBANK0     000
__LbssCOMMON                        bssCOMMON    000
__Lcinit                            cinit        011
__Lclrtext                          clrtext      000
__Lcode                             code         000
__Lcommon                           common       000
__Lconfig                           config       000
__LcstackBANK0                      cstackBANK0  000
__LcstackCOMMON                     cstackCOMMON 000
__LdataBANK0                        dataBANK0    000
__Leeprom_data                      eeprom_data  000
__Lend_init                         end_init     010
__Lfunctab                          functab      000
__LidataBANK0                       idataBANK0   000
__Lidloc                            idloc        000
__Linit                             init         010
__Lintentry                         intentry     004
__Lmaintext                         maintext     000
__Lpowerup                          powerup      000
__Lram                              ram          000
__Lreset_vec                        reset_vec    000
__Lsfr0                             sfr0         000
__Lsfr1                             sfr1         000
__Lsfr2                             sfr2         000
__Lsfr3                             sfr3         000
__Lspace_0                          (abs)        000
__Lspace_1                          (abs)        000
__Lspace_2                          (abs)        000
__Lspace_3                          (abs)        000
__Lstack                            stack        000
__Lstrings                          strings      000
__Ltext                             text         000
__S0                                (abs)        4A9
__S1                                (abs)        07E
__S2                                (abs)        000
__S3                                (abs)        000
___int_sp                           stack        000
___latbits                          (abs)        000
___sp                               stack        000
__end_of__initialization            cinit        030
__end_of__stringtab                 strings      206
__end_of_calculateBitsFromTable     text5        464
__end_of_codeToMatrix               strings      286
__end_of_importantKeys              strings      2DA
__end_of_kempstonMouseKeys          strings      2E0
__end_of_main                       maintext     1F5
__end_of_myDelay                    text4        4A9
__end_of_myIsr                      text6        382
__end_of_replaceOnDelayKeyDown      strings      2D4
__end_of_replaceOnShiftKeyDown      strings      2B0
__end_of_replaceTwoBytesCodes       strings      2CC
__end_of_sendDataToAltera           text3        41F
__end_of_updateKey                  text1        3D5
__end_of_updatePort                 text2        495
__initialization                    cinit        011
__pbssBANK0                         bssBANK0     038
__pbssCOMMON                        bssCOMMON    079
__pcstackBANK0                      cstackBANK0  020
__pcstackCOMMON                     cstackCOMMON 070
__pdataBANK0                        dataBANK0    04F
__pidataBANK0                       idataBANK0   495
__pintentry                         intentry     004
__pmaintext                         maintext     032
__pstrings                          strings      200
__ptext1                            text1        382
__ptext2                            text2        464
__ptext3                            text3        3D5
__ptext4                            text4        4A8
__ptext5                            text5        41F
__ptext6                            text6        2E0
__size_of_calculateBitsFromTable    (abs)        000
__size_of_main                      (abs)        000
__size_of_myDelay                   (abs)        000
__size_of_myIsr                     (abs)        000
__size_of_sendDataToAltera          (abs)        000
__size_of_updateKey                 (abs)        000
__size_of_updatePort                (abs)        000
__stringbase                        strings      205
__stringtab                         strings      200
_calculateBitsFromTable             text5        41F
_codeToMatrix                       strings      206
_delay                              bssBANK0     042
_delayedKey                         bssBANK0     04A
_importantKeys                      strings      2D4
_inData                             bssBANK0     038
_inDataPos                          bssCOMMON    07A
_kempstonMouseEmulatorDelay         bssBANK0     040
_kempstonMouseEmulatorKeys          bssBANK0     04D
_kempstonMouseKeys                  strings      2DA
_main                               maintext     032
_myDelay                            text4        4A8
_myIsr                              text6        2E0
_myIsr$139                          cstackCOMMON 076
_nRBPU                              (abs)        40F
_numLock                            bssBANK0     04C
_outPorts                           dataBANK0    04F
_ps2Bits                            bssCOMMON    07C
_ps2BitsCount                       bssCOMMON    07B
_ps2DataA                           bssCOMMON    079
_ps2DataCount                       bssBANK0     048
_ps2DataState                       bssCOMMON    07D
_ps2Device                          bssBANK0     047
_ps2DownA                           bssBANK0     045
_ps2NeedEncode                      bssBANK0     044
_ps2WaitCode                        bssBANK0     046
_readDataPos                        bssBANK0     049
_replaceOnDelayKeyDown              strings      2CC
_replaceOnShiftKeyDown              strings      286
_replaceTwoBytesCodes               strings      2B0
_replaced                           bssBANK0     04B
_sendDataToAltera                   text3        3D5
_sendDataToAltera$156               cstackBANK0  022
_shift_ctrl_alt                     bssBANK0     04E
_updateKey                          text1        382
_updateKey$149                      cstackBANK0  02A
_updatePort                         text2        464
btemp                               (abs)        07E
calculateBitsFromTable@bits         cstackBANK0  021
calculateBitsFromTable@clearIfFound cstackBANK0  024
calculateBitsFromTable@count        cstackBANK0  023
calculateBitsFromTable@i            cstackBANK0  028
calculateBitsFromTable@keyCode      cstackBANK0  027
calculateBitsFromTable@keyDown      cstackBANK0  020
calculateBitsFromTable@table        cstackBANK0  022
clear_ram0                          clrtext      4A0
end_of_initialization               cinit        030
interrupt_function                  intentry     004
intlevel0                           functab      000
intlevel1                           functab      000
intlevel2                           functab      000
intlevel3                           functab      000
intlevel4                           functab      000
intlevel5                           functab      000
main@i                              cstackBANK0  033
main@i_176                          cstackBANK0  035
main@i_177                          cstackBANK0  034
main@keyCode                        cstackBANK0  037
main@keyDown                        cstackBANK0  036
main@needSave                       cstackBANK0  032
myIsr@i                             cstackCOMMON 078
reset_vec                           reset_vec    000
saved_w                             (abs)        07E
sendDataToAltera@i                  cstackBANK0  024
stackhi                             (abs)        000
stacklo                             (abs)        000
start                               init         010
start_initialization                cinit        011
updateKey@code                      cstackBANK0  02C
updateKey@down                      cstackBANK0  026
updateKey@key                       cstackBANK0  028
updateKey@localCtrl                 cstackBANK0  02B
updateKey@localShift                cstackBANK0  029
updatePort@a                        cstackBANK0  024
updatePort@bit_id                   cstackBANK0  025
updatePort@set                      cstackBANK0  020
wtemp0                              (abs)        07E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 376 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1   20[BANK0 ] char 
  i               1   21[BANK0 ] char 
  keyCode         1   23[BANK0 ] unsigned char 
  keyDown         1   22[BANK0 ] unsigned char 
  needSave        1   18[BANK0 ] unsigned char 
  i               1   19[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       6       0       0
      Temps:          0       5       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_calculateBitsFromTable
		_sendDataToAltera
		_updateKey
		_updatePort
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _updateKey *****************
 Defined at:
		line 204 in file "main.c"
 Parameters:    Size  Location     Type
  key             1    wreg     unsigned char 
  down            1    6[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  key             1    8[BANK0 ] unsigned char 
  code            1   12[BANK0 ] unsigned char 
  localCtrl       1   11[BANK0 ] unsigned char 
  localShift      1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       5       0       0
      Temps:          0       1       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_updatePort
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _updatePort *****************
 Defined at:
		line 195 in file "main.c"
 Parameters:    Size  Location     Type
  bit_id          1    wreg     unsigned char 
  set             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  bit_id          1    5[BANK0 ] unsigned char 
  a               1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       2       0       0
      Temps:          0       3       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_updateKey
		_main
 This function uses a non-reentrant model


 *************** function _sendDataToAltera *****************
 Defined at:
		line 255 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    4[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_myDelay
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _myDelay *****************
 Defined at:
		line 223 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_sendDataToAltera
 This function uses a non-reentrant model


 *************** function _calculateBitsFromTable *****************
 Defined at:
		line 326 in file "main.c"
 Parameters:    Size  Location     Type
  keyCode         1    wreg     PTR unsigned char 
		 -> main@keyCode(1), 
  keyDown         1    0[BANK0 ] PTR unsigned char 
		 -> main@keyDown(1), 
  bits            1    1[BANK0 ] PTR unsigned char 
		 -> kempstonMouseEmulatorKeys(1), shift_ctrl_alt(1), 
  table           1    2[BANK0 ] PTR unsigned char 
		 -> kempstonMouseKeys(6), importantKeys(6), 
  count           1    3[BANK0 ] unsigned char 
  clearIfFound    1    4[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  keyCode         1    7[BANK0 ] PTR unsigned char 
		 -> main@keyCode(1), 
  i               1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    2
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _myIsr *****************
 Defined at:
		line 117 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    8[COMMON] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          6       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__stringtab    		STRING         	0200	0000	7
		_kempstonMouseKeys		STRING         	02DA	0000	7
		_codeToMatrix  		STRING         	0206	0000	129
		_importantKeys 		STRING         	02D4	0000	7
		_replaceTwoBytesCodes		STRING         	02B0	0000	29
		__initialization		CODE           	0011	0000	32
		_replaceOnShiftKeyDown		STRING         	0286	0000	43
		_replaceOnDelayKeyDown		STRING         	02CC	0000	9

shared estimated size: 263

main.c
		_updatePort    		CODE           	0464	0000	50
		_main          		CODE           	0032	0000	452
		_calculateBitsFromTable		CODE           	041F	0000	70
		_myIsr         		CODE           	02E0	0000	163
		_myDelay       		CODE           	04A8	0000	2
		_updateKey     		CODE           	0382	0000	84
		_sendDataToAltera		CODE           	03D5	0000	75

main.c estimated size: 896

