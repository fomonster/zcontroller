Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\pic16F84.production.sym \
  --cmf=dist/default/production\pic16F84.production.cmf -z -Q16F84A \
  -oC:\Users\FOMONS~1\AppData\Local\Temp\sljg.2 \
  -Mdist/default/production/pic16F84.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=041h-04dh -pstack=STACK -ACODE=00h-03FFh \
  -ASTRCODE=00h-03FFh -ASTRING=00h-0FFhx4 -ACONST=00h-0FFhx4 \
  -AENTRY=00h-0FFhx4 -ABANK0=0Ch-04Dh -ARAM=0Ch-04Dh -AABS1=0Ch-04Fh \
  -ACOMMON=04Eh-04Fh -ASFR0=00h-0Bh -ASFR1=080h-0CDh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-03Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\FOMONS~1\AppData\Local\Temp\sljg.o \
  dist/default/production\pic16F84.production.o 

Object code version is 3.11

Machine type is 16F84A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\FOMONS~1\AppData\Local\Temp\sljg.o
                end_init                              F        F        1        8       0
                reset_vec                             0        0        1        0       0
dist/default/production\pic16F84.production.o
                cinit                                10       10       21        8       0
                intentry                              4        4        B        8       0
                text4                               1A4      1A4       93      1EA       0
                text3                               2C0      2C0       1E      1EA       0
                text2                               289      289       37      1EA       0
                text1                               237      237       52      1EA       0
                maintext                             F5       F5       AF      1EA       0
                cstackBANK0                           C        C       1A        C       1
                clrtext                             2EB      2EB        8      1EA       0
                dataBANK0                            33       33        D        C       1
                bssBANK0                             26       26        D        C       1
                nvBANK0                              40       40        1        C       1
                strings                              31       31       C4       62       0
                idataBANK0                          2DE      2DE        D      1EA       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              F        F        1         0
                cinit                                10       10       21         0
                intentry                              4        4        B         0
                reset_vec                             0        0        1         0
                text4                               1A4      1A4       93         0
                text3                               2C0      2C0       1E         0
                text2                               289      289       37         0
                text1                               237      237       52         0
                maintext                             F5       F5       AF         0
                clrtext                             2EB      2EB        8         0
                idataBANK0                          2DE      2DE        D         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                              31       31       C4         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   BANK0          
                cstackBANK0                           C        C       1A         1
                dataBANK0                            33       33        D         1
                bssBANK0                             26       26        D         1
                nvBANK0                              40       40        1         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               4E       4E        2         1

        CLASS   COMMON         

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK1          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  00002D  000031         8       0  CODE        2
                cstackBANK0                    00000C  000035  000041         C       1  BANK0       1
                strings                        000031  0000C4  0000F5        62       0  STRING      2
                maintext                       0000F5  0001FE  0002F3       1EA       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            041-04D             D           1
        CODE             001-003             3           2
                         2F3-3FF           10D
        CONFIG           2007-2007             1           2
        CONST            001-003             3           2
                         2F3-3FF             D
        EEDATA           2100-213F            40           2
        ENTRY            001-003             3           2
                         2F3-3FF             D
        IDLOC            2000-2003             4           2
        RAM              041-04D             D           1
        SFR0             000-00B             C           1
        SFR1             080-0CD            4E           1
        STACK            041-04D             D           1
        STRCODE          001-003             3           2
                         2F3-3FF           10D
        STRING           001-003             3           2
                         2F3-3FF             D

                                  Symbol Table

_GIE                           (abs)       05F
_PORTA                         (abs)       005
_PORTAbits                     (abs)       005
_PORTB                         (abs)       006
_PSA                           (abs)       40B
_RA1                           (abs)       029
_RA2                           (abs)       02A
_T0CS                          (abs)       40D
_T0IE                          (abs)       05D
_T0IF                          (abs)       05A
_T0SE                          (abs)       40C
_TMR0                          (abs)       001
_TRISA0                        (abs)       428
_TRISA1                        (abs)       429
_TRISA2                        (abs)       42A
_TRISA3                        (abs)       42B
_TRISA4                        (abs)       42C
_TRISB                         (abs)       086
__Habs1                        abs1        000
__Hbank0                       bank0       000
__Hbank1                       bank1       000
__HbssBANK0                    bssBANK0    000
__Hcinit                       cinit       031
__Hclrtext                     clrtext     000
__Hcode                        code        000
__Hcommon                      common      000
__Hconfig                      config      000
__HcstackBANK0                 cstackBANK0 000
__HdataBANK0                   dataBANK0   000
__Heeprom_data                 eeprom_data 000
__Hend_init                    end_init    010
__Hfunctab                     functab     000
__HidataBANK0                  idataBANK0  000
__Hidloc                       idloc       000
__Hinit                        init        00F
__Hintentry                    intentry    00F
__Hmaintext                    maintext    000
__HnvBANK0                     nvBANK0     000
__Hpowerup                     powerup     000
__Hram                         ram         000
__Hreset_vec                   reset_vec   001
__Hsfr0                        sfr0        000
__Hsfr1                        sfr1        000
__Hspace_0                     (abs)       2F3
__Hspace_1                     (abs)       041
__Hspace_2                     (abs)       000
__Hspace_3                     (abs)       000
__Hstack                       stack       000
__Hstrings                     strings     000
__Htext                        text        000
__Labs1                        abs1        000
__Lbank0                       bank0       000
__Lbank1                       bank1       000
__LbssBANK0                    bssBANK0    000
__Lcinit                       cinit       010
__Lclrtext                     clrtext     000
__Lcode                        code        000
__Lcommon                      common      000
__Lconfig                      config      000
__LcstackBANK0                 cstackBANK0 000
__LdataBANK0                   dataBANK0   000
__Leeprom_data                 eeprom_data 000
__Lend_init                    end_init    00F
__Lfunctab                     functab     000
__LidataBANK0                  idataBANK0  000
__Lidloc                       idloc       000
__Linit                        init        00F
__Lintentry                    intentry    004
__Lmaintext                    maintext    000
__LnvBANK0                     nvBANK0     000
__Lpowerup                     powerup     000
__Lram                         ram         000
__Lreset_vec                   reset_vec   000
__Lsfr0                        sfr0        000
__Lsfr1                        sfr1        000
__Lspace_0                     (abs)       000
__Lspace_1                     (abs)       000
__Lspace_2                     (abs)       000
__Lspace_3                     (abs)       000
__Lstack                       stack       000
__Lstrings                     strings     000
__Ltext                        text        000
__S0                           (abs)       2F3
__S1                           (abs)       041
__S2                           (abs)       000
__S3                           (abs)       000
___int_sp                      stack       000
___latbits                     (abs)       000
___sp                          stack       000
__end_of__initialization       cinit       02F
__end_of__stringtab            strings     037
__end_of_codeToMatrix          strings     0B7
__end_of_main                  maintext    1A4
__end_of_myIsr                 text4       237
__end_of_replaceOnShiftKeyDown strings     0DB
__end_of_replaceTwoBytesCodes  strings     0F5
__end_of_sendDataToAltera      text3       2DE
__end_of_updateKey             text1       289
__end_of_updatePort            text2       2C0
__initialization               cinit       010
__pbssBANK0                    bssBANK0    026
__pcstackBANK0                 cstackBANK0 00C
__pdataBANK0                   dataBANK0   033
__pidataBANK0                  idataBANK0  2DE
__pintentry                    intentry    004
__pmaintext                    maintext    0F5
__pnvBANK0                     nvBANK0     040
__pstrings                     strings     031
__ptext1                       text1       237
__ptext2                       text2       289
__ptext3                       text3       2C0
__ptext4                       text4       1A4
__size_of_main                 (abs)       000
__size_of_myIsr                (abs)       000
__size_of_sendDataToAltera     (abs)       000
__size_of_updateKey            (abs)       000
__size_of_updatePort           (abs)       000
__stringbase                   strings     036
__stringtab                    strings     031
_codeToMatrix                  strings     037
_ctrl                          bssBANK0    029
_i                             bssBANK0    02B
_main                          maintext    0F5
_mouseDelay                    bssBANK0    026
_mouseX                        dataBANK0   03F
_mouseY                        dataBANK0   03E
_myIsr                         text4       1A4
_myIsr$84                      cstackBANK0 012
_outPorts                      dataBANK0   033
_ps2Bits                       bssBANK0    031
_ps2BitsCount                  bssBANK0    030
_ps2Data                       bssBANK0    02F
_ps2DataCount                  bssBANK0    02E
_ps2DataState                  bssBANK0    032
_ps2Down                       nvBANK0     040
_ps2NeedEncode                 bssBANK0    02C
_ps2WaitCode                   bssBANK0    02D
_replaceOnShiftKeyDown         strings     0B7
_replaceTwoBytesCodes          strings     0DB
_replaced                      bssBANK0    028
_sendDataToAltera              text3       2C0
_shift                         bssBANK0    02A
_updateKey                     text1       237
_updateKey$94                  cstackBANK0 020
_updateKey$97                  cstackBANK0 022
_updateKey$98                  cstackBANK0 023
_updatePort                    text2       289
btemp                          (abs)       04E
clear_ram0                     clrtext     2EB
end_of_initialization          cinit       02F
interrupt_function             intentry    004
intlevel0                      functab     000
intlevel1                      functab     000
intlevel2                      functab     000
intlevel3                      functab     000
intlevel4                      functab     000
intlevel5                      functab     000
myIsr@ii                       cstackBANK0 014
reset_vec                      reset_vec   000
saved_w                        (abs)       04E
stackhi                        (abs)       000
stacklo                        (abs)       000
start                          init        00F
start_initialization           cinit       010
updateKey@key                  cstackBANK0 024
updateKey@localCtrl            cstackBANK0 021
updateKey@localShift           cstackBANK0 01F
updateKey@set                  cstackBANK0 01D
updatePort@a                   cstackBANK0 01B
updatePort@b                   cstackBANK0 01A
updatePort@bit_id              cstackBANK0 01C
updatePort@set                 cstackBANK0 016
wtemp0                         (abs)       04E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 216 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       1
      Totals:         0       1
Total ram usage:        1 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_sendDataToAltera
		_updateKey
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _updateKey *****************
 Defined at:
		line 146 in file "main.c"
 Parameters:    Size  Location     Type
  key             1    wreg     unsigned char 
  set             1   17[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  key             1   24[BANK0 ] unsigned char 
  localCtrl       1   21[BANK0 ] unsigned char 
  localShift      1   19[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       1
      Locals:         0       6
      Temps:          0       1
      Totals:         0       8
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_updatePort
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _updatePort *****************
 Defined at:
		line 135 in file "main.c"
 Parameters:    Size  Location     Type
  bit_id          1    wreg     unsigned char 
  set             1   10[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  bit_id          1   16[BANK0 ] unsigned char 
  a               1   15[BANK0 ] unsigned char 
  b               1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       1
      Locals:         0       3
      Temps:          0       3
      Totals:         0       7
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_updateKey
 This function uses a non-reentrant model


 *************** function _sendDataToAltera *****************
 Defined at:
		line 163 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       1
      Totals:         0       1
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _myIsr *****************
 Defined at:
		line 74 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ii              2    8[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       4
      Temps:          0       6
      Totals:         0      10
Total ram usage:       10 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__stringtab    		STRING         	0031	0000	7
		_codeToMatrix  		STRING         	0037	0000	129
		_replaceTwoBytesCodes		STRING         	00DB	0000	27
		__initialization		CODE           	0010	0000	32
		_replaceOnShiftKeyDown		STRING         	00B7	0000	37

shared estimated size: 232

main.c
		_updatePort    		CODE           	0289	0000	56
		_main          		CODE           	00F5	0000	176
		_myIsr         		CODE           	01A4	0000	148
		_updateKey     		CODE           	0237	0000	83
		_sendDataToAltera		CODE           	02C0	0000	31

main.c estimated size: 494

