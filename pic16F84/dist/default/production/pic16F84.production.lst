

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Aug 06 21:25:17 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F84A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 212 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   102                           EEDATA equ 08h ;# 
   103  0008                     # 281 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   104                           EEADR equ 09h ;# 
   105  0009                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   106                           PCLATH equ 0Ah ;# 
   107  000A                     # 308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   108                           INTCON equ 0Bh ;# 
   109  000B                     # 386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   110                           OPTION_REG equ 081h ;# 
   111  0081                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   112                           TRISA equ 085h ;# 
   113  0085                     # 500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   114                           TRISB equ 086h ;# 
   115  0086                     # 562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   116                           EECON1 equ 088h ;# 
   117  0088                     # 606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   118                           EECON2 equ 089h ;# 
   119  0089                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   120                           INDF equ 00h ;# 
   121  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   122                           TMR0 equ 01h ;# 
   123  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   124                           PCL equ 02h ;# 
   125  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   126                           STATUS equ 03h ;# 
   127  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   128                           FSR equ 04h ;# 
   129  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   130                           PORTA equ 05h ;# 
   131  0005                     # 212 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   132                           PORTB equ 06h ;# 
   133  0006                     # 274 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   134                           EEDATA equ 08h ;# 
   135  0008                     # 281 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   136                           EEADR equ 09h ;# 
   137  0009                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   138                           PCLATH equ 0Ah ;# 
   139  000A                     # 308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   140                           INTCON equ 0Bh ;# 
   141  000B                     # 386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   142                           OPTION_REG equ 081h ;# 
   143  0081                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   144                           TRISA equ 085h ;# 
   145  0085                     # 500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   146                           TRISB equ 086h ;# 
   147  0086                     # 562 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   148                           EECON1 equ 088h ;# 
   149  0088                     # 606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f84a.h"
   150                           EECON2 equ 089h ;# 
   151  0089                     	FNCALL	_main,_keyDown
   152                           	FNCALL	_main,_keyUp
   153                           	FNCALL	_main,_replaceCode
   154                           	FNCALL	_main,_sendDataToAltera
   155                           	FNCALL	_keyUp,_codeToMatrix
   156                           	FNCALL	_keyUp,_resetPort
   157                           	FNCALL	_keyUp,_setPort
   158                           	FNCALL	_keyDown,_codeToMatrix
   159                           	FNCALL	_keyDown,_setPort
   160                           	FNROOT	_main
   161                           	FNCALL	intlevel1,_myIsr
   162                           	global	intlevel1
   163                           	FNROOT	intlevel1
   164                           	global	_outPorts
   165                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   166                           global __pidataBANK0
   167                           __pidataBANK0:
   168  03B6                     	file	"main.c"
   169                           	line	39
   170                           
   171                           ;initializer for _outPorts
   172                           	retlw	0FFh
   173  03B6  34FF               	retlw	0FFh
   174  03B7  34FF               	retlw	0FFh
   175  03B8  34FF               	retlw	0FFh
   176  03B9  34FF               	retlw	0FFh
   177  03BA  34FF               	retlw	0FFh
   178  03BB  34FF               	retlw	0FFh
   179  03BC  34FF               	retlw	0FFh
   180  03BD  34FF               	retlw	0FFh
   181  03BE  34FF               	retlw	0FFh
   182  03BF  34FF               	retlw	0FFh
   183  03C0  34FF               	global	_ps2Data
   184                           	global	_numLock
   185                           	global	_capsLock
   186                           	global	_shift
   187                           	global	_ps2DataCount
   188                           	global	_ps2BitsCount
   189                           	global	_ps2Bits
   190                           	global	_ps2DataState
   191                           	global	_PORTB
   192                           _PORTB	set	0x6
   193  0006                     	global	_PORTA
   194                           _PORTA	set	0x5
   195  0005                     	global	_PORTAbits
   196                           _PORTAbits	set	0x5
   197  0005                     	global	_TMR0
   198                           _TMR0	set	0x1
   199  0001                     	global	_GIE
   200                           _GIE	set	0x5F
   201  005F                     	global	_T0IF
   202                           _T0IF	set	0x5A
   203  005A                     	global	_T0IE
   204                           _T0IE	set	0x5D
   205  005D                     	global	_TRISB
   206                           _TRISB	set	0x86
   207  0086                     	global	_PSA
   208                           _PSA	set	0x40B
   209  040B                     	global	_T0SE
   210                           _T0SE	set	0x40C
   211  040C                     	global	_T0CS
   212                           _T0CS	set	0x40D
   213  040D                     	global	_TRISA4
   214                           _TRISA4	set	0x42C
   215  042C                     	global	_TRISA3
   216                           _TRISA3	set	0x42B
   217  042B                     	global	_TRISA2
   218                           _TRISA2	set	0x42A
   219  042A                     	global	_TRISA1
   220                           _TRISA1	set	0x429
   221  0429                     	global	_TRISA0
   222                           _TRISA0	set	0x428
   223  0428                     ; #config settings
   224                           	file	"C:\Users\FOMONS~1\AppData\Local\Temp\s6qs."
   225                           	line	#
   226                           psect cinit,class=CODE,delta=2
   227                           global start_initialization
   228                           start_initialization:
   229  000E                     
   230                           global __initialization
   231                           __initialization:
   232  000E                     psect	bssBANK0,class=BANK0,space=1,noexec
   233                           global __pbssBANK0
   234                           __pbssBANK0:
   235  001F                     _ps2Data:
   236  001F                            ds      8
   237  001F                     
   238                           _keyCode:
   239  0027                            ds      2
   240  0027                     
   241                           _numLock:
   242  0029                            ds      1
   243  0029                     
   244                           _capsLock:
   245  002A                            ds      1
   246  002A                     
   247                           _shift:
   248  002B                            ds      1
   249  002B                     
   250                           _i:
   251  002C                            ds      1
   252  002C                     
   253                           _ps2DataCount:
   254  002D                            ds      1
   255  002D                     
   256                           _ps2BitsCount:
   257  002E                            ds      1
   258  002E                     
   259                           _ps2Bits:
   260  002F                            ds      1
   261  002F                     
   262                           _ps2DataState:
   263  0030                            ds      1
   264  0030                     
   265                           psect	dataBANK0,class=BANK0,space=1,noexec
   266                           global __pdataBANK0
   267                           __pdataBANK0:
   268  0031                     	file	"main.c"
   269                           	line	39
   270                           _outPorts:
   271  0031                            ds      11
   272  0031                     
   273                           	file	"C:\Users\FOMONS~1\AppData\Local\Temp\s6qs."
   274                           	line	#
   275                           ; Initialize objects allocated to BANK0
   276                           	global __pidataBANK0
   277                           psect cinit,class=CODE,delta=2,merge=1
   278                           	fcall	__pidataBANK0+0		;fetch initializer
   279  000E  23B6               	movwf	__pdataBANK0+0&07fh		
   280  000F  00B1               	fcall	__pidataBANK0+1		;fetch initializer
   281  0010  23B7               	movwf	__pdataBANK0+1&07fh		
   282  0011  00B2               	fcall	__pidataBANK0+2		;fetch initializer
   283  0012  23B8               	movwf	__pdataBANK0+2&07fh		
   284  0013  00B3               	fcall	__pidataBANK0+3		;fetch initializer
   285  0014  23B9               	movwf	__pdataBANK0+3&07fh		
   286  0015  00B4               	fcall	__pidataBANK0+4		;fetch initializer
   287  0016  23BA               	movwf	__pdataBANK0+4&07fh		
   288  0017  00B5               	fcall	__pidataBANK0+5		;fetch initializer
   289  0018  23BB               	movwf	__pdataBANK0+5&07fh		
   290  0019  00B6               	fcall	__pidataBANK0+6		;fetch initializer
   291  001A  23BC               	movwf	__pdataBANK0+6&07fh		
   292  001B  00B7               	fcall	__pidataBANK0+7		;fetch initializer
   293  001C  23BD               	movwf	__pdataBANK0+7&07fh		
   294  001D  00B8               	fcall	__pidataBANK0+8		;fetch initializer
   295  001E  23BE               	movwf	__pdataBANK0+8&07fh		
   296  001F  00B9               	fcall	__pidataBANK0+9		;fetch initializer
   297  0020  23BF               	movwf	__pdataBANK0+9&07fh		
   298  0021  00BA               	fcall	__pidataBANK0+10		;fetch initializer
   299  0022  23C0               	movwf	__pdataBANK0+10&07fh		
   300  0023  00BB               	line	#
   301                           psect clrtext,class=CODE,delta=2
   302                           global clear_ram0
   303                           ;	Called with FSR containing the base address, and
   304                           ;	W with the last address+1
   305                           clear_ram0:
   306  03C1                     	clrwdt			;clear the watchdog before getting into this loop
   307  03C1  0064               clrloop0:
   308  03C2                     	clrf	indf		;clear RAM location pointed to by FSR
   309  03C2  0180               	incf	fsr,f		;increment pointer
   310  03C3  0A84               	xorwf	fsr,w		;XOR with final address
   311  03C4  0604               	btfsc	status,2	;have we reached the end yet?
   312  03C5  1903               	retlw	0		;all done for this memory range, return
   313  03C6  3400               	xorwf	fsr,w		;XOR again to restore value
   314  03C7  0604               	goto	clrloop0		;do the next byte
   315  03C8  2BC2               
   316                           ; Clear objects allocated to BANK0
   317                           psect cinit,class=CODE,delta=2,merge=1
   318                           	bcf	status, 7	;select IRP bank0
   319  0024  1383               	movlw	low(__pbssBANK0)
   320  0025  301F               	movwf	fsr
   321  0026  0084               	movlw	low((__pbssBANK0)+012h)
   322  0027  3031               	fcall	clear_ram0
   323  0028  23C1               psect cinit,class=CODE,delta=2,merge=1
   324                           global end_of_initialization,__end_of__initialization
   325                           
   326                           ;End of C runtime variable initialization code
   327                           
   328                           end_of_initialization:
   329  0029                     __end_of__initialization:
   330  0029                     clrf status
   331  0029  0183               ljmp _main	;jump to C main() function
   332  002A  2928               psect	cstackCOMMON,class=COMMON,space=1,noexec
   333                           global __pcstackCOMMON
   334                           __pcstackCOMMON:
   335  0000                     ??_sendDataToAltera:	; 1 bytes @ 0x0
   336  0000                     ??_main:	; 1 bytes @ 0x0
   337  0000                     psect	cstackBANK0,class=BANK0,space=1,noexec
   338                           global __pcstackBANK0
   339                           __pcstackBANK0:
   340  000C                     ?_replaceCode:	; 1 bytes @ 0x0
   341  000C                     ?_myIsr:	; 1 bytes @ 0x0
   342  000C                     ??_myIsr:	; 1 bytes @ 0x0
   343  000C                     ?_setPort:	; 1 bytes @ 0x0
   344  000C                     ?_resetPort:	; 1 bytes @ 0x0
   345  000C                     ?_keyDown:	; 1 bytes @ 0x0
   346  000C                     ?_keyUp:	; 1 bytes @ 0x0
   347  000C                     ?_sendDataToAltera:	; 1 bytes @ 0x0
   348  000C                     ?_main:	; 1 bytes @ 0x0
   349  000C                     codeToMatrix@k:	; 1 bytes @ 0x0
   350  000C                     	ds	5
   351  000C                     ??_replaceCode:	; 1 bytes @ 0x5
   352  0011                     ??_setPort:	; 1 bytes @ 0x5
   353  0011                     ??_resetPort:	; 1 bytes @ 0x5
   354  0011                     	global	?_codeToMatrix
   355                           ?_codeToMatrix:	; 2 bytes @ 0x5
   356  0011                     	global	codeToMatrix@s
   357                           codeToMatrix@s:	; 1 bytes @ 0x5
   358  0011                     	ds	1
   359  0011                     	global	codeToMatrix@c
   360                           codeToMatrix@c:	; 1 bytes @ 0x6
   361  0012                     	ds	1
   362  0012                     	global	codeToMatrix@n
   363                           codeToMatrix@n:	; 1 bytes @ 0x7
   364  0013                     	global	replaceCode@code
   365                           replaceCode@code:	; 1 bytes @ 0x7
   366  0013                     	ds	1
   367  0013                     ??_codeToMatrix:	; 1 bytes @ 0x8
   368  0014                     	global	replaceCode@r
   369                           replaceCode@r:	; 1 bytes @ 0x8
   370  0014                     	global	setPort@bit_id
   371                           setPort@bit_id:	; 1 bytes @ 0x8
   372  0014                     	global	resetPort@bit_id
   373                           resetPort@bit_id:	; 1 bytes @ 0x8
   374  0014                     	ds	2
   375  0014                     	global	codeToMatrix@r
   376                           codeToMatrix@r:	; 2 bytes @ 0xA
   377  0016                     	ds	2
   378  0016                     ??_keyDown:	; 1 bytes @ 0xC
   379  0018                     ??_keyUp:	; 1 bytes @ 0xC
   380  0018                     	ds	4
   381  0018                     	global	keyDown@key
   382                           keyDown@key:	; 1 bytes @ 0x10
   383  001C                     	global	keyUp@key
   384                           keyUp@key:	; 1 bytes @ 0x10
   385  001C                     	ds	1
   386  001C                     	global	keyDown@c
   387                           keyDown@c:	; 2 bytes @ 0x11
   388  001D                     	global	keyUp@c
   389                           keyUp@c:	; 2 bytes @ 0x11
   390  001D                     	ds	2
   391  001D                     ;!
   392                           ;!Data Sizes:
   393                           ;!    Strings     0
   394                           ;!    Constant    0
   395                           ;!    Data        11
   396                           ;!    BSS         18
   397                           ;!    Persistent  0
   398                           ;!    Stack       0
   399                           ;!
   400                           ;!Auto Spaces:
   401                           ;!    Space          Size  Autos    Used
   402                           ;!    COMMON            0      0       0
   403                           ;!    BANK0            66     19      48
   404                           
   405                           ;!
   406                           ;!Pointer List with Targets:
   407                           ;!
   408                           ;!    None.
   409                           
   410                           
   411                           ;!
   412                           ;!Critical Paths under _main in COMMON
   413                           ;!
   414                           ;!    None.
   415                           ;!
   416                           ;!Critical Paths under _myIsr in COMMON
   417                           ;!
   418                           ;!    None.
   419                           ;!
   420                           ;!Critical Paths under _main in BANK0
   421                           ;!
   422                           ;!    _main->_keyDown
   423                           ;!    _main->_keyUp
   424                           ;!    _keyUp->_codeToMatrix
   425                           ;!    _keyDown->_codeToMatrix
   426                           ;!
   427                           ;!Critical Paths under _myIsr in BANK0
   428                           ;!
   429                           ;!    None.
   430                           
   431 ;;
   432 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   433 ;;
   434                           
   435                           ;!
   436                           ;!Call Graph Tables:
   437                           ;!
   438                           ;! ---------------------------------------------------------------------------------
   439                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   440                           ;! ---------------------------------------------------------------------------------
   441                           ;! (0) _main                                                 0     0      0    1906
   442                           ;!                            _keyDown
   443                           ;!                              _keyUp
   444                           ;!                        _replaceCode
   445                           ;!                   _sendDataToAltera
   446                           ;! ---------------------------------------------------------------------------------
   447                           ;! (1) _sendDataToAltera                                     0     0      0       0
   448                           ;! ---------------------------------------------------------------------------------
   449                           ;! (1) _replaceCode                                          4     4      0      60
   450                           ;!                                              5 BANK0      4     4      0
   451                           ;! ---------------------------------------------------------------------------------
   452                           ;! (1) _keyUp                                                7     7      0     945
   453                           ;!                                             12 BANK0      7     7      0
   454                           ;!                       _codeToMatrix
   455                           ;!                          _resetPort
   456                           ;!                            _setPort
   457                           ;! ---------------------------------------------------------------------------------
   458                           ;! (2) _resetPort                                            4     4      0      44
   459                           ;!                                              5 BANK0      4     4      0
   460                           ;! ---------------------------------------------------------------------------------
   461                           ;! (1) _keyDown                                              7     7      0     901
   462                           ;!                                             12 BANK0      7     7      0
   463                           ;!                       _codeToMatrix
   464                           ;!                            _setPort
   465                           ;! ---------------------------------------------------------------------------------
   466                           ;! (2) _setPort                                              4     4      0      44
   467                           ;!                                              5 BANK0      4     4      0
   468                           ;! ---------------------------------------------------------------------------------
   469                           ;! (2) _codeToMatrix                                         8     5      3     746
   470                           ;!                                              5 BANK0      7     4      3
   471                           ;! ---------------------------------------------------------------------------------
   472                           ;! Estimated maximum stack depth 2
   473                           ;! ---------------------------------------------------------------------------------
   474                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   475                           ;! ---------------------------------------------------------------------------------
   476                           ;! (3) _myIsr                                                5     5      0       0
   477                           ;!                                              0 BANK0      5     5      0
   478                           ;! ---------------------------------------------------------------------------------
   479                           ;! Estimated maximum stack depth 3
   480                           ;! ---------------------------------------------------------------------------------
   481                           ;!
   482                           ;! Call Graph Graphs:
   483                           ;!
   484                           ;! _main (ROOT)
   485                           ;!   _keyDown
   486                           ;!     _codeToMatrix
   487                           ;!     _setPort
   488                           ;!   _keyUp
   489                           ;!     _codeToMatrix
   490                           ;!     _resetPort
   491                           ;!     _setPort
   492                           ;!   _replaceCode
   493                           ;!   _sendDataToAltera
   494                           ;!
   495                           ;! _myIsr (ROOT)
   496                           ;!
   497                           
   498                           ;! Address spaces:
   499                           
   500                           ;!Name               Size   Autos  Total    Cost      Usage
   501                           ;!SFR1                 0      0       0       2        0.0%
   502                           ;!BITSFR1              0      0       0       2        0.0%
   503                           ;!BANK0               42     13      30       3       72.7%
   504                           ;!BITBANK0            42      0       0       5        0.0%
   505                           ;!SFR0                 0      0       0       1        0.0%
   506                           ;!BITSFR0              0      0       0       1        0.0%
   507                           ;!COMMON               0      0       0       1        0.0%
   508                           ;!BITCOMMON            0      0       0       0        0.0%
   509                           ;!CODE                 0      0       0       0        0.0%
   510                           ;!DATA                 0      0      30       6        0.0%
   511                           ;!ABS                  0      0      30       4        0.0%
   512                           ;!NULL                 0      0       0       0        0.0%
   513                           ;!STACK                0      0       0       2        0.0%
   514                           ;!EEDATA              40      0       0       0        0.0%
   515                           
   516                           	global	_main
   517                           
   518 ;; *************** function _main *****************
   519 ;; Defined at:
   520 ;;		line 235 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : B00/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0
   534 ;;      Params:         0       0
   535 ;;      Locals:         0       0
   536 ;;      Temps:          0       0
   537 ;;      Totals:         0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels required when called:    3
   540 ;; This function calls:
   541 ;;		_keyDown
   542 ;;		_keyUp
   543 ;;		_replaceCode
   544 ;;		_sendDataToAltera
   545 ;; This function is called by:
   546 ;;		Startup code after reset
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   550                           	file	"main.c"
   551                           	line	235
   552                           global __pmaintext
   553                           __pmaintext:	;psect for function _main
   554  0128                     psect	maintext
   555                           	file	"main.c"
   556                           	line	235
   557                           	global	__size_of_main
   558                           	__size_of_main	equ	__end_of_main-_main
   559  00BE                     	
   560                           _main:	
   561  0128                     ;incstack = 0
   562                           	opt	stack 5
   563                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   564                           	line	237
   565                           	
   566                           l1304:	
   567  0128                     ;main.c: 237:     TRISA0 = 1;
   568                           	bsf	status, 5	;RP0=1, select bank1
   569  0128  1683               	bsf	(1064/8)^080h,(1064)&7	;volatile
   570  0129  1405               	line	238
   571                           ;main.c: 238:     TRISA1 = 0;
   572                           	bcf	(1065/8)^080h,(1065)&7	;volatile
   573  012A  1085               	line	239
   574                           ;main.c: 239:     TRISA2 = 0;
   575                           	bcf	(1066/8)^080h,(1066)&7	;volatile
   576  012B  1105               	line	240
   577                           ;main.c: 240:     TRISA3 = 1;
   578                           	bsf	(1067/8)^080h,(1067)&7	;volatile
   579  012C  1585               	line	241
   580                           ;main.c: 241:     TRISA4 = 1;
   581                           	bsf	(1068/8)^080h,(1068)&7	;volatile
   582  012D  1605               	line	243
   583                           	
   584                           l1306:	
   585  012E                     ;main.c: 243:     PORTA = 0b00000000;
   586                           	bcf	status, 5	;RP0=0, select bank0
   587  012E  1283               	clrf	(5)	;volatile
   588  012F  0185               	line	245
   589                           ;main.c: 245:     TRISB = 0b00000000;
   590                           	bsf	status, 5	;RP0=1, select bank1
   591  0130  1683               	clrf	(134)^080h	;volatile
   592  0131  0186               	line	246
   593                           	
   594                           l1308:	
   595  0132                     ;main.c: 246:     PORTB = 0b00000010;
   596                           	movlw	low(02h)
   597  0132  3002               	bcf	status, 5	;RP0=0, select bank0
   598  0133  1283               	movwf	(6)	;volatile
   599  0134  0086               	line	266
   600                           	
   601                           l1310:	
   602  0135                     ;main.c: 266:     T0CS = 1;
   603                           	bsf	status, 5	;RP0=1, select bank1
   604  0135  1683               	bsf	(1037/8)^080h,(1037)&7	;volatile
   605  0136  1681               	line	267
   606                           	
   607                           l1312:	
   608  0137                     ;main.c: 267:     T0SE = 1;
   609                           	bsf	(1036/8)^080h,(1036)&7	;volatile
   610  0137  1601               	line	268
   611                           	
   612                           l1314:	
   613  0138                     ;main.c: 268:     GIE = 1;
   614                           	bsf	(95/8),(95)&7	;volatile
   615  0138  178B               	line	269
   616                           	
   617                           l1316:	
   618  0139                     ;main.c: 269:     T0IE = 1;
   619                           	bsf	(93/8),(93)&7	;volatile
   620  0139  168B               	line	270
   621                           	
   622                           l1318:	
   623  013A                     ;main.c: 270:     PSA = 1;
   624                           	bsf	(1035/8)^080h,(1035)&7	;volatile
   625  013A  1581               	line	271
   626                           	
   627                           l1320:	
   628  013B                     ;main.c: 271:     T0IF = 0;
   629                           	bcf	(90/8),(90)&7	;volatile
   630  013B  110B               	line	272
   631                           	
   632                           l1322:	
   633  013C                     ;main.c: 272:     TMR0 = 255;
   634                           	movlw	low(0FFh)
   635  013C  30FF               	bcf	status, 5	;RP0=0, select bank0
   636  013D  1283               	movwf	(1)	;volatile
   637  013E  0081               	line	274
   638                           ;main.c: 274:     ps2DataState = 0;
   639                           	clrf	(_ps2DataState)
   640  013F  01B0               	line	275
   641                           ;main.c: 275:     ps2BitsCount = 0;
   642                           	clrf	(_ps2BitsCount)
   643  0140  01AE               	line	276
   644                           ;main.c: 276:     ps2Bits = 0;
   645                           	clrf	(_ps2Bits)
   646  0141  01AF               	goto	l1324
   647  0142  2943               	line	279
   648                           ;main.c: 279:     while(1)
   649                           	
   650                           l192:	
   651  0143                     	line	281
   652                           	
   653                           l1324:	
   654  0143                     ;main.c: 280:     {;main.c: 281:         if ( ps2DataState == 3 ) {
   655                           		movlw	3
   656  0143  3003               	bcf	status, 5	;RP0=0, select bank0
   657  0144  1283               	xorwf	((_ps2DataState)),w
   658  0145  0630               	btfss	status,2
   659  0146  1D03               	goto	u931
   660  0147  2949               	goto	u930
   661  0148  294A               u931:
   662  0149                     	goto	l193
   663  0149  29E2               u930:
   664  014A                     	line	284
   665                           	
   666                           l1326:	
   667  014A                     ;main.c: 284:             if ( ps2DataCount == 1) {
   668                           		decf	((_ps2DataCount)),w
   669  014A  032D               	btfss	status,2
   670  014B  1D03               	goto	u941
   671  014C  294E               	goto	u940
   672  014D  294F               u941:
   673  014E                     	goto	l1330
   674  014E  2952               u940:
   675  014F                     	line	285
   676                           	
   677                           l1328:	
   678  014F                     ;main.c: 285:                 keyDown(ps2Data[0]);
   679                           	movf	(_ps2Data),w
   680  014F  081F               	fcall	_keyDown
   681  0150  233D               	line	286
   682                           ;main.c: 286:             } else if ( ps2DataCount == 2 ) {
   683                           	goto	l1376
   684  0151  29DE               	
   685                           l194:	
   686  0152                     	
   687                           l1330:	
   688  0152                     		movlw	2
   689  0152  3002               	bcf	status, 5	;RP0=0, select bank0
   690  0153  1283               	xorwf	((_ps2DataCount)),w
   691  0154  062D               	btfss	status,2
   692  0155  1D03               	goto	u951
   693  0156  2958               	goto	u950
   694  0157  2959               u951:
   695  0158                     	goto	l1340
   696  0158  296F               u950:
   697  0159                     	line	287
   698                           	
   699                           l1332:	
   700  0159                     ;main.c: 287:                 if ( ps2Data[0] == 0xF0 ) {
   701                           		movlw	240
   702  0159  30F0               	xorwf	((_ps2Data)),w
   703  015A  061F               	btfss	status,2
   704  015B  1D03               	goto	u961
   705  015C  295E               	goto	u960
   706  015D  295F               u961:
   707  015E                     	goto	l1336
   708  015E  2962               u960:
   709  015F                     	line	288
   710                           	
   711                           l1334:	
   712  015F                     ;main.c: 288:                     keyUp(ps2Data[1]);
   713                           	movf	0+(_ps2Data)+01h,w
   714  015F  0820               	fcall	_keyUp
   715  0160  2301               	line	289
   716                           ;main.c: 289:                 } else if ( ps2Data[0] == 0xE0 ) {
   717                           	goto	l1376
   718  0161  29DE               	
   719                           l197:	
   720  0162                     	
   721                           l1336:	
   722  0162                     		movlw	224
   723  0162  30E0               	bcf	status, 5	;RP0=0, select bank0
   724  0163  1283               	xorwf	((_ps2Data)),w
   725  0164  061F               	btfss	status,2
   726  0165  1D03               	goto	u971
   727  0166  2968               	goto	u970
   728  0167  2969               u971:
   729  0168                     	goto	l1376
   730  0168  29DE               u970:
   731  0169                     	line	290
   732                           	
   733                           l1338:	
   734  0169                     ;main.c: 290:                     keyDown(replaceCode(ps2Data[1]));
   735                           	movf	0+(_ps2Data)+01h,w
   736  0169  0820               	fcall	_replaceCode
   737  016A  2298               	fcall	_keyDown
   738  016B  233D               	goto	l1376
   739  016C  29DE               	line	291
   740                           ;main.c: 291:                 }
   741                           	
   742                           l199:	
   743  016D                     	goto	l1376
   744  016D  29DE               	
   745                           l198:	
   746  016E                     	line	292
   747                           ;main.c: 292:             } else if ( ps2DataCount == 3 ){
   748                           	goto	l1376
   749  016E  29DE               	
   750                           l196:	
   751  016F                     	
   752                           l1340:	
   753  016F                     		movlw	3
   754  016F  3003               	bcf	status, 5	;RP0=0, select bank0
   755  0170  1283               	xorwf	((_ps2DataCount)),w
   756  0171  062D               	btfss	status,2
   757  0172  1D03               	goto	u981
   758  0173  2975               	goto	u980
   759  0174  2976               u981:
   760  0175                     	goto	l1348
   761  0175  2987               u980:
   762  0176                     	line	293
   763                           	
   764                           l1342:	
   765  0176                     ;main.c: 293:                 if ( ps2Data[0] == 0xF0 && ps2Data[1] == 0xE0 ) {
   766                           		movlw	240
   767  0176  30F0               	xorwf	((_ps2Data)),w
   768  0177  061F               	btfss	status,2
   769  0178  1D03               	goto	u991
   770  0179  297B               	goto	u990
   771  017A  297C               u991:
   772  017B                     	goto	l1376
   773  017B  29DE               u990:
   774  017C                     	
   775                           l1344:	
   776  017C                     		movlw	224
   777  017C  30E0               	xorwf	(0+(_ps2Data)+01h),w
   778  017D  0620               	btfss	status,2
   779  017E  1D03               	goto	u1001
   780  017F  2981               	goto	u1000
   781  0180  2982               u1001:
   782  0181                     	goto	l1376
   783  0181  29DE               u1000:
   784  0182                     	line	294
   785                           	
   786                           l1346:	
   787  0182                     ;main.c: 294:                     keyUp(replaceCode(ps2Data[2]));
   788                           	movf	0+(_ps2Data)+02h,w
   789  0182  0821               	fcall	_replaceCode
   790  0183  2298               	fcall	_keyUp
   791  0184  2301               	goto	l1376
   792  0185  29DE               	line	295
   793                           ;main.c: 295:                 }
   794                           	
   795                           l202:	
   796  0186                     	line	296
   797                           ;main.c: 296:             } else if ( ps2DataCount > 3 ){
   798                           	goto	l1376
   799  0186  29DE               	
   800                           l201:	
   801  0187                     	
   802                           l1348:	
   803  0187                     	bcf	status, 5	;RP0=0, select bank0
   804  0187  1283               	movf	(_ps2DataCount),w
   805  0188  082D               	xorlw	80h
   806  0189  3A80               	addlw	-((04h)^80h)
   807  018A  3E7C               	skipc
   808  018B  1C03               	goto	u1011
   809  018C  298E               	goto	u1010
   810  018D  298F               u1011:
   811  018E                     	goto	l1376
   812  018E  29DE               u1010:
   813  018F                     	line	297
   814                           	
   815                           l1350:	
   816  018F                     ;main.c: 297:                 if ( ps2Data[0] == 0xF0 ) {
   817                           		movlw	240
   818  018F  30F0               	xorwf	((_ps2Data)),w
   819  0190  061F               	btfss	status,2
   820  0191  1D03               	goto	u1021
   821  0192  2994               	goto	u1020
   822  0193  2995               u1021:
   823  0194                     	goto	l1364
   824  0194  29B7               u1020:
   825  0195                     	line	298
   826                           	
   827                           l1352:	
   828  0195                     ;main.c: 298:                     if ( ps2Data[1] == 0xE1 && ps2Data[2] == 0x14 ) keyUp(
                                 replaceCode(ps2Data[3]));
   829                           		movlw	225
   830  0195  30E1               	xorwf	(0+(_ps2Data)+01h),w
   831  0196  0620               	btfss	status,2
   832  0197  1D03               	goto	u1031
   833  0198  299A               	goto	u1030
   834  0199  299B               u1031:
   835  019A                     	goto	l1358
   836  019A  29A5               u1030:
   837  019B                     	
   838                           l1354:	
   839  019B                     		movlw	20
   840  019B  3014               	xorwf	(0+(_ps2Data)+02h),w
   841  019C  0621               	btfss	status,2
   842  019D  1D03               	goto	u1041
   843  019E  29A0               	goto	u1040
   844  019F  29A1               u1041:
   845  01A0                     	goto	l1358
   846  01A0  29A5               u1040:
   847  01A1                     	
   848                           l1356:	
   849  01A1                     	movf	0+(_ps2Data)+03h,w
   850  01A1  0822               	fcall	_replaceCode
   851  01A2  2298               	fcall	_keyUp
   852  01A3  2301               	goto	l1358
   853  01A4  29A5               	
   854                           l206:	
   855  01A5                     	line	299
   856                           	
   857                           l1358:	
   858  01A5                     ;main.c: 299:                     if ( ps2Data[1] == 0xE0 && ps2Data[2] == 0x12 ) keyUp(
                                 replaceCode(ps2Data[2]));
   859                           		movlw	224
   860  01A5  30E0               	bcf	status, 5	;RP0=0, select bank0
   861  01A6  1283               	xorwf	(0+(_ps2Data)+01h),w
   862  01A7  0620               	btfss	status,2
   863  01A8  1D03               	goto	u1051
   864  01A9  29AB               	goto	u1050
   865  01AA  29AC               u1051:
   866  01AB                     	goto	l1376
   867  01AB  29DE               u1050:
   868  01AC                     	
   869                           l1360:	
   870  01AC                     		movlw	18
   871  01AC  3012               	xorwf	(0+(_ps2Data)+02h),w
   872  01AD  0621               	btfss	status,2
   873  01AE  1D03               	goto	u1061
   874  01AF  29B1               	goto	u1060
   875  01B0  29B2               u1061:
   876  01B1                     	goto	l1376
   877  01B1  29DE               u1060:
   878  01B2                     	
   879                           l1362:	
   880  01B2                     	movf	0+(_ps2Data)+02h,w
   881  01B2  0821               	fcall	_replaceCode
   882  01B3  2298               	fcall	_keyUp
   883  01B4  2301               	goto	l1376
   884  01B5  29DE               	
   885                           l207:	
   886  01B6                     	line	300
   887                           ;main.c: 300:                 } else {
   888                           	goto	l1376
   889  01B6  29DE               	
   890                           l205:	
   891  01B7                     	line	301
   892                           	
   893                           l1364:	
   894  01B7                     ;main.c: 301:                     if ( ps2Data[0] == 0xE1 && ps2Data[1] == 0x14 ) keyDow
                                 n(replaceCode(ps2Data[2]));
   895                           		movlw	225
   896  01B7  30E1               	bcf	status, 5	;RP0=0, select bank0
   897  01B8  1283               	xorwf	((_ps2Data)),w
   898  01B9  061F               	btfss	status,2
   899  01BA  1D03               	goto	u1071
   900  01BB  29BD               	goto	u1070
   901  01BC  29BE               u1071:
   902  01BD                     	goto	l1370
   903  01BD  29C8               u1070:
   904  01BE                     	
   905                           l1366:	
   906  01BE                     		movlw	20
   907  01BE  3014               	xorwf	(0+(_ps2Data)+01h),w
   908  01BF  0620               	btfss	status,2
   909  01C0  1D03               	goto	u1081
   910  01C1  29C3               	goto	u1080
   911  01C2  29C4               u1081:
   912  01C3                     	goto	l1370
   913  01C3  29C8               u1080:
   914  01C4                     	
   915                           l1368:	
   916  01C4                     	movf	0+(_ps2Data)+02h,w
   917  01C4  0821               	fcall	_replaceCode
   918  01C5  2298               	fcall	_keyDown
   919  01C6  233D               	goto	l1370
   920  01C7  29C8               	
   921                           l209:	
   922  01C8                     	line	302
   923                           	
   924                           l1370:	
   925  01C8                     ;main.c: 302:                     if ( ps2Data[0] == 0xE0 && ps2Data[1] == 0x12 ) keyDow
                                 n(replaceCode(ps2Data[1]));
   926                           		movlw	224
   927  01C8  30E0               	bcf	status, 5	;RP0=0, select bank0
   928  01C9  1283               	xorwf	((_ps2Data)),w
   929  01CA  061F               	btfss	status,2
   930  01CB  1D03               	goto	u1091
   931  01CC  29CE               	goto	u1090
   932  01CD  29CF               u1091:
   933  01CE                     	goto	l1376
   934  01CE  29DE               u1090:
   935  01CF                     	
   936                           l1372:	
   937  01CF                     		movlw	18
   938  01CF  3012               	xorwf	(0+(_ps2Data)+01h),w
   939  01D0  0620               	btfss	status,2
   940  01D1  1D03               	goto	u1101
   941  01D2  29D4               	goto	u1100
   942  01D3  29D5               u1101:
   943  01D4                     	goto	l1376
   944  01D4  29DE               u1100:
   945  01D5                     	
   946                           l1374:	
   947  01D5                     	movf	0+(_ps2Data)+01h,w
   948  01D5  0820               	fcall	_replaceCode
   949  01D6  2298               	fcall	_keyDown
   950  01D7  233D               	goto	l1376
   951  01D8  29DE               	
   952                           l210:	
   953  01D9                     	goto	l1376
   954  01D9  29DE               	line	303
   955                           ;main.c: 303:                 }
   956                           	
   957                           l208:	
   958  01DA                     	goto	l1376
   959  01DA  29DE               	line	304
   960                           ;main.c: 304:             }
   961                           	
   962                           l204:	
   963  01DB                     	goto	l1376
   964  01DB  29DE               	
   965                           l203:	
   966  01DC                     	goto	l1376
   967  01DC  29DE               	
   968                           l200:	
   969  01DD                     	goto	l1376
   970  01DD  29DE               	
   971                           l195:	
   972  01DE                     	line	307
   973                           	
   974                           l1376:	
   975  01DE                     ;main.c: 307:             ps2DataCount = 0;
   976                           	bcf	status, 5	;RP0=0, select bank0
   977  01DE  1283               	clrf	(_ps2DataCount)
   978  01DF  01AD               	line	308
   979                           	
   980                           l1378:	
   981  01E0                     ;main.c: 308:             ps2DataState = 0;
   982                           	clrf	(_ps2DataState)
   983  01E0  01B0               	line	311
   984                           	
   985                           l1380:	
   986  01E1                     ;main.c: 311:             sendDataToAltera();
   987                           	fcall	_sendDataToAltera
   988  01E1  23C9               	line	312
   989                           ;main.c: 312:         }
   990                           	
   991                           l193:	
   992  01E2                     	line	321
   993                           # 321 "main.c"
   994                           clrwdt ;# 
   995  01E2  0064               psect	maintext
   996                           	goto	l1324
   997  01E3  2943               	line	322
   998                           ;main.c: 322:     }
   999                           	
  1000                           l211:	
  1001  01E4                     	goto	l1324
  1002  01E4  2943               	
  1003                           l212:	
  1004  01E5                     	line	324
  1005                           	
  1006                           l213:	
  1007  01E5                     	global	start
  1008                           	ljmp	start
  1009  01E5  280D               	opt stack 0
  1010                           GLOBAL	__end_of_main
  1011                           	__end_of_main:
  1012  01E6                     	signat	_main,89
  1013                           	global	_sendDataToAltera
  1014                           
  1015 ;; *************** function _sendDataToAltera *****************
  1016 ;; Defined at:
  1017 ;;		line 216 in file "main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		None
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0
  1031 ;;      Params:         0       0
  1032 ;;      Locals:         0       0
  1033 ;;      Temps:          0       0
  1034 ;;      Totals:         0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1045                           	line	216
  1046                           global __ptext1
  1047                           __ptext1:	;psect for function _sendDataToAltera
  1048  03C9                     psect	text1
  1049                           	file	"main.c"
  1050                           	line	216
  1051                           	global	__size_of_sendDataToAltera
  1052                           	__size_of_sendDataToAltera	equ	__end_of_sendDataToAltera-_sendDataToAltera
  1053  0001                     	
  1054                           _sendDataToAltera:	
  1055  03C9                     ;incstack = 0
  1056                           	opt	stack 6
  1057                           ; Regs used in _sendDataToAltera: []
  1058                           	line	219
  1059                           	
  1060                           l181:	
  1061  03C9                     	return
  1062  03C9  0008               	opt stack 0
  1063                           GLOBAL	__end_of_sendDataToAltera
  1064                           	__end_of_sendDataToAltera:
  1065  03CA                     	signat	_sendDataToAltera,89
  1066                           	global	_replaceCode
  1067                           
  1068 ;; *************** function _replaceCode *****************
  1069 ;; Defined at:
  1070 ;;		line 85 in file "main.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  code            1    wreg     unsigned char 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;  code            1    7[BANK0 ] unsigned char 
  1075 ;;  r               1    8[BANK0 ] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      unsigned char 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0
  1085 ;;      Params:         0       0
  1086 ;;      Locals:         0       2
  1087 ;;      Temps:          0       2
  1088 ;;      Totals:         0       4
  1089 ;;Total ram usage:        4 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    1
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1099                           	line	85
  1100                           global __ptext2
  1101                           __ptext2:	;psect for function _replaceCode
  1102  0298                     psect	text2
  1103                           	file	"main.c"
  1104                           	line	85
  1105                           	global	__size_of_replaceCode
  1106                           	__size_of_replaceCode	equ	__end_of_replaceCode-_replaceCode
  1107  0069                     	
  1108                           _replaceCode:	
  1109  0298                     ;incstack = 0
  1110                           	opt	stack 6
  1111                           ; Regs used in _replaceCode: [wreg-fsr0h+status,2+status,0]
  1112                           ;replaceCode@code stored from wreg
  1113                           	bcf	status, 5	;RP0=0, select bank0
  1114  0298  1283               	movwf	(replaceCode@code)
  1115  0299  0093               	line	87
  1116                           	
  1117                           l1182:	
  1118  029A                     ;main.c: 85: uint8_t replaceCode(uint8_t code);main.c: 86: {;main.c: 87:     uint8_t r =
                                  0x00;
  1119                           	clrf	(replaceCode@r)
  1120  029A  0194               	line	88
  1121                           ;main.c: 88:     switch(code) {
  1122                           	goto	l1216
  1123  029B  2AC7               	line	89
  1124                           ;main.c: 89:         case 0x12:
  1125                           	
  1126                           l119:	
  1127  029C                     	line	90
  1128                           	
  1129                           l1184:	
  1130  029C                     ;main.c: 90:             r = 0x00;
  1131                           	clrf	(replaceCode@r)
  1132  029C  0194               	line	91
  1133                           ;main.c: 91:             break;
  1134                           	goto	l1218
  1135  029D  2AFE               	line	92
  1136                           ;main.c: 92:         case 0x77:
  1137                           	
  1138                           l121:	
  1139  029E                     	line	93
  1140                           	
  1141                           l1186:	
  1142  029E                     ;main.c: 93:             r = 0x00;
  1143                           	clrf	(replaceCode@r)
  1144  029E  0194               	line	94
  1145                           ;main.c: 94:             break;
  1146                           	goto	l1218
  1147  029F  2AFE               	line	95
  1148                           ;main.c: 95:         case 0x70:
  1149                           	
  1150                           l122:	
  1151  02A0                     	line	96
  1152                           	
  1153                           l1188:	
  1154  02A0                     ;main.c: 96:             r = 0x00;
  1155                           	clrf	(replaceCode@r)
  1156  02A0  0194               	line	97
  1157                           ;main.c: 97:             break;
  1158                           	goto	l1218
  1159  02A1  2AFE               	line	98
  1160                           ;main.c: 98:         case 0x6C:
  1161                           	
  1162                           l123:	
  1163  02A2                     	line	99
  1164                           	
  1165                           l1190:	
  1166  02A2                     ;main.c: 99:             r = 0x00;
  1167                           	clrf	(replaceCode@r)
  1168  02A2  0194               	line	100
  1169                           ;main.c: 100:             break;
  1170                           	goto	l1218
  1171  02A3  2AFE               	line	101
  1172                           ;main.c: 101:         case 0x7D:
  1173                           	
  1174                           l124:	
  1175  02A4                     	line	102
  1176                           	
  1177                           l1192:	
  1178  02A4                     ;main.c: 102:             r = 0x00;
  1179                           	clrf	(replaceCode@r)
  1180  02A4  0194               	line	103
  1181                           ;main.c: 103:             break;
  1182                           	goto	l1218
  1183  02A5  2AFE               	line	104
  1184                           ;main.c: 104:         case 0x71:
  1185                           	
  1186                           l125:	
  1187  02A6                     	line	105
  1188                           	
  1189                           l1194:	
  1190  02A6                     ;main.c: 105:             r = 0x00;
  1191                           	clrf	(replaceCode@r)
  1192  02A6  0194               	line	106
  1193                           ;main.c: 106:             break;
  1194                           	goto	l1218
  1195  02A7  2AFE               	line	107
  1196                           ;main.c: 107:         case 0x69:
  1197                           	
  1198                           l126:	
  1199  02A8                     	line	108
  1200                           	
  1201                           l1196:	
  1202  02A8                     ;main.c: 108:             r = 0x00;
  1203                           	clrf	(replaceCode@r)
  1204  02A8  0194               	line	109
  1205                           ;main.c: 109:             break;
  1206                           	goto	l1218
  1207  02A9  2AFE               	line	110
  1208                           ;main.c: 110:         case 0x7A:
  1209                           	
  1210                           l127:	
  1211  02AA                     	line	111
  1212                           	
  1213                           l1198:	
  1214  02AA                     ;main.c: 111:             r = 0x00;
  1215                           	clrf	(replaceCode@r)
  1216  02AA  0194               	line	112
  1217                           ;main.c: 112:             break;
  1218                           	goto	l1218
  1219  02AB  2AFE               	line	113
  1220                           ;main.c: 113:         case 0x5A:
  1221                           	
  1222                           l128:	
  1223  02AC                     	line	114
  1224                           	
  1225                           l1200:	
  1226  02AC                     ;main.c: 114:             r = 0x00;
  1227                           	clrf	(replaceCode@r)
  1228  02AC  0194               	line	115
  1229                           ;main.c: 115:             break;
  1230                           	goto	l1218
  1231  02AD  2AFE               	line	116
  1232                           ;main.c: 116:         case 0x75:
  1233                           	
  1234                           l129:	
  1235  02AE                     	line	117
  1236                           	
  1237                           l1202:	
  1238  02AE                     ;main.c: 117:             r = 0xF5;
  1239                           	movlw	low(0F5h)
  1240  02AE  30F5               	movwf	(??_replaceCode+0)+0
  1241  02AF  0091               	movf	(??_replaceCode+0)+0,w
  1242  02B0  0811               	movwf	(replaceCode@r)
  1243  02B1  0094               	line	118
  1244                           ;main.c: 118:             break;
  1245                           	goto	l1218
  1246  02B2  2AFE               	line	119
  1247                           ;main.c: 119:         case 0x6B:
  1248                           	
  1249                           l130:	
  1250  02B3                     	line	120
  1251                           	
  1252                           l1204:	
  1253  02B3                     ;main.c: 120:             r = 0xFB;
  1254                           	movlw	low(0FBh)
  1255  02B3  30FB               	movwf	(??_replaceCode+0)+0
  1256  02B4  0091               	movf	(??_replaceCode+0)+0,w
  1257  02B5  0811               	movwf	(replaceCode@r)
  1258  02B6  0094               	line	121
  1259                           ;main.c: 121:             break;
  1260                           	goto	l1218
  1261  02B7  2AFE               	line	122
  1262                           ;main.c: 122:         case 0x74:
  1263                           	
  1264                           l131:	
  1265  02B8                     	line	123
  1266                           	
  1267                           l1206:	
  1268  02B8                     ;main.c: 123:             r = 0xF4;
  1269                           	movlw	low(0F4h)
  1270  02B8  30F4               	movwf	(??_replaceCode+0)+0
  1271  02B9  0091               	movf	(??_replaceCode+0)+0,w
  1272  02BA  0811               	movwf	(replaceCode@r)
  1273  02BB  0094               	line	124
  1274                           ;main.c: 124:             break;
  1275                           	goto	l1218
  1276  02BC  2AFE               	line	125
  1277                           ;main.c: 125:         case 0x72:
  1278                           	
  1279                           l132:	
  1280  02BD                     	line	126
  1281                           	
  1282                           l1208:	
  1283  02BD                     ;main.c: 126:             r = 0xF2;
  1284                           	movlw	low(0F2h)
  1285  02BD  30F2               	movwf	(??_replaceCode+0)+0
  1286  02BE  0091               	movf	(??_replaceCode+0)+0,w
  1287  02BF  0811               	movwf	(replaceCode@r)
  1288  02C0  0094               	line	127
  1289                           ;main.c: 127:             break;
  1290                           	goto	l1218
  1291  02C1  2AFE               	line	128
  1292                           ;main.c: 128:         case 0x11:
  1293                           	
  1294                           l133:	
  1295  02C2                     	line	129
  1296                           	
  1297                           l1210:	
  1298  02C2                     ;main.c: 129:             r = 0x00;
  1299                           	clrf	(replaceCode@r)
  1300  02C2  0194               	line	130
  1301                           ;main.c: 130:             break;
  1302                           	goto	l1218
  1303  02C3  2AFE               	line	131
  1304                           ;main.c: 131:         case 0x14:
  1305                           	
  1306                           l134:	
  1307  02C4                     	line	132
  1308                           	
  1309                           l1212:	
  1310  02C4                     ;main.c: 132:             r = 0x00;
  1311                           	clrf	(replaceCode@r)
  1312  02C4  0194               	line	133
  1313                           ;main.c: 133:             break;
  1314                           	goto	l1218
  1315  02C5  2AFE               	line	134
  1316                           	
  1317                           l1214:	
  1318  02C6                     ;main.c: 134:     }
  1319                           	goto	l1218
  1320  02C6  2AFE               	
  1321                           l118:	
  1322  02C7                     	
  1323                           l1216:	
  1324  02C7                     	movf	(replaceCode@code),w
  1325  02C7  0813               	movwf	(??_replaceCode+0)+0
  1326  02C8  0091               	clrf	(??_replaceCode+0)+0+1
  1327  02C9  0192               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1328                           ; Switch size 1, requested type "space"
  1329                           ; Number of cases is 1, Range of values is 0 to 0
  1330                           ; switch strategies available:
  1331                           ; Name         Instructions Cycles
  1332                           ; simple_byte            4     3 (average)
  1333                           ; direct_byte            7     6 (fixed)
  1334                           ; jumptable            260     6 (fixed)
  1335                           ;	Chosen strategy is simple_byte
  1336                           
  1337                           	movf 1+(??_replaceCode+0)+0,w
  1338  02CA  0812               	opt asmopt_push
  1339                           	opt asmopt_off
  1340                           	xorlw	0^0	; case 0
  1341  02CB  3A00               	skipnz
  1342  02CC  1903               	goto	l1422
  1343  02CD  2ACF               	goto	l1218
  1344  02CE  2AFE               	opt asmopt_pop
  1345                           	
  1346                           l1422:	
  1347  02CF                     ; Switch size 1, requested type "space"
  1348                           ; Number of cases is 15, Range of values is 17 to 125
  1349                           ; switch strategies available:
  1350                           ; Name         Instructions Cycles
  1351                           ; simple_byte           46    24 (average)
  1352                           ; direct_byte          118     9 (fixed)
  1353                           ; jumptable            263     9 (fixed)
  1354                           ;	Chosen strategy is simple_byte
  1355                           
  1356                           	movf 0+(??_replaceCode+0)+0,w
  1357  02CF  0811               	opt asmopt_push
  1358                           	opt asmopt_off
  1359                           	xorlw	17^0	; case 17
  1360  02D0  3A11               	skipnz
  1361  02D1  1903               	goto	l1210
  1362  02D2  2AC2               	xorlw	18^17	; case 18
  1363  02D3  3A03               	skipnz
  1364  02D4  1903               	goto	l1184
  1365  02D5  2A9C               	xorlw	20^18	; case 20
  1366  02D6  3A06               	skipnz
  1367  02D7  1903               	goto	l1212
  1368  02D8  2AC4               	xorlw	90^20	; case 90
  1369  02D9  3A4E               	skipnz
  1370  02DA  1903               	goto	l1200
  1371  02DB  2AAC               	xorlw	105^90	; case 105
  1372  02DC  3A33               	skipnz
  1373  02DD  1903               	goto	l1196
  1374  02DE  2AA8               	xorlw	107^105	; case 107
  1375  02DF  3A02               	skipnz
  1376  02E0  1903               	goto	l1204
  1377  02E1  2AB3               	xorlw	108^107	; case 108
  1378  02E2  3A07               	skipnz
  1379  02E3  1903               	goto	l1190
  1380  02E4  2AA2               	xorlw	112^108	; case 112
  1381  02E5  3A1C               	skipnz
  1382  02E6  1903               	goto	l1188
  1383  02E7  2AA0               	xorlw	113^112	; case 113
  1384  02E8  3A01               	skipnz
  1385  02E9  1903               	goto	l1194
  1386  02EA  2AA6               	xorlw	114^113	; case 114
  1387  02EB  3A03               	skipnz
  1388  02EC  1903               	goto	l1208
  1389  02ED  2ABD               	xorlw	116^114	; case 116
  1390  02EE  3A06               	skipnz
  1391  02EF  1903               	goto	l1206
  1392  02F0  2AB8               	xorlw	117^116	; case 117
  1393  02F1  3A01               	skipnz
  1394  02F2  1903               	goto	l1202
  1395  02F3  2AAE               	xorlw	119^117	; case 119
  1396  02F4  3A02               	skipnz
  1397  02F5  1903               	goto	l1186
  1398  02F6  2A9E               	xorlw	122^119	; case 122
  1399  02F7  3A0D               	skipnz
  1400  02F8  1903               	goto	l1198
  1401  02F9  2AAA               	xorlw	125^122	; case 125
  1402  02FA  3A07               	skipnz
  1403  02FB  1903               	goto	l1192
  1404  02FC  2AA4               	goto	l1218
  1405  02FD  2AFE               	opt asmopt_pop
  1406                           
  1407                           	
  1408                           l120:	
  1409  02FE                     	line	135
  1410                           	
  1411                           l1218:	
  1412  02FE                     ;main.c: 135:     return r;
  1413                           	movf	(replaceCode@r),w
  1414  02FE  0814               	goto	l135
  1415  02FF  2B00               	
  1416                           l1220:	
  1417  0300                     	line	136
  1418                           	
  1419                           l135:	
  1420  0300                     	return
  1421  0300  0008               	opt stack 0
  1422                           GLOBAL	__end_of_replaceCode
  1423                           	__end_of_replaceCode:
  1424  0301                     	signat	_replaceCode,4217
  1425                           	global	_keyUp
  1426                           
  1427 ;; *************** function _keyUp *****************
  1428 ;; Defined at:
  1429 ;;		line 207 in file "main.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  key             1    wreg     unsigned char 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  key             1   16[BANK0 ] unsigned char 
  1434 ;;  c               2   17[BANK0 ] unsigned int 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0
  1444 ;;      Params:         0       0
  1445 ;;      Locals:         0       3
  1446 ;;      Temps:          0       4
  1447 ;;      Totals:         0       7
  1448 ;;Total ram usage:        7 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    2
  1451 ;; This function calls:
  1452 ;;		_codeToMatrix
  1453 ;;		_resetPort
  1454 ;;		_setPort
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1460                           	line	207
  1461                           global __ptext3
  1462                           __ptext3:	;psect for function _keyUp
  1463  0301                     psect	text3
  1464                           	file	"main.c"
  1465                           	line	207
  1466                           	global	__size_of_keyUp
  1467                           	__size_of_keyUp	equ	__end_of_keyUp-_keyUp
  1468  003C                     	
  1469                           _keyUp:	
  1470  0301                     ;incstack = 0
  1471                           	opt	stack 5
  1472                           ; Regs used in _keyUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1473                           ;keyUp@key stored from wreg
  1474                           	bcf	status, 5	;RP0=0, select bank0
  1475  0301  1283               	movwf	(keyUp@key)
  1476  0302  009C               	line	209
  1477                           	
  1478                           l1236:	
  1479  0303                     ;main.c: 207: void keyUp(uint8_t key);main.c: 208: {;main.c: 209:     uint16_t c = codeT
                                 oMatrix(key, shift, capsLock, numLock );
  1480                           	movf	(_shift),w
  1481  0303  082B               	movwf	(??_keyUp+0)+0
  1482  0304  0098               	movf	(??_keyUp+0)+0,w
  1483  0305  0818               	movwf	(codeToMatrix@s)
  1484  0306  0091               	movf	(_capsLock),w
  1485  0307  082A               	movwf	(??_keyUp+1)+0
  1486  0308  0099               	movf	(??_keyUp+1)+0,w
  1487  0309  0819               	movwf	(codeToMatrix@c)
  1488  030A  0092               	movf	(_numLock),w
  1489  030B  0829               	movwf	(??_keyUp+2)+0
  1490  030C  009A               	movf	(??_keyUp+2)+0,w
  1491  030D  081A               	movwf	(codeToMatrix@n)
  1492  030E  0093               	movf	(keyUp@key),w
  1493  030F  081C               	fcall	_codeToMatrix
  1494  0310  202B               	bcf	status, 5	;RP0=0, select bank0
  1495  0311  1283               	movf	(1+(?_codeToMatrix)),w
  1496  0312  0812               	movwf	(keyUp@c+1)
  1497  0313  009E               	movf	(0+(?_codeToMatrix)),w
  1498  0314  0811               	movwf	(keyUp@c)
  1499  0315  009D               	line	210
  1500                           	
  1501                           l1238:	
  1502  0316                     ;main.c: 210:     if ( (c & 0xFF) != 0xFF ) resetPort(c & 0xFF );
  1503                           	movlw	0FFh
  1504  0316  30FF               	andwf	(keyUp@c),w
  1505  0317  051D               	movwf	(??_keyUp+0)+0
  1506  0318  0098               	movlw	0
  1507  0319  3000               	andwf	(keyUp@c+1),w
  1508  031A  051E               	movwf	1+(??_keyUp+0)+0
  1509  031B  0099               		incf	((??_keyUp+0)+0),w
  1510  031C  0A18               iorwf	((??_keyUp+0)+1),w
  1511  031D  0419               	btfsc	status,2
  1512  031E  1903               	goto	u721
  1513  031F  2B21               	goto	u720
  1514  0320  2B22               u721:
  1515  0321                     	goto	l1242
  1516  0321  2B25               u720:
  1517  0322                     	
  1518                           l1240:	
  1519  0322                     	movf	(keyUp@c),w
  1520  0322  081D               	fcall	_resetPort
  1521  0323  2379               	goto	l1242
  1522  0324  2B25               	
  1523                           l176:	
  1524  0325                     	line	211
  1525                           	
  1526                           l1242:	
  1527  0325                     ;main.c: 211:     if ( (( c >> 8 ) & 0xFF ) != 0xFF ) setPort( (c >> 8 ) & 0xFF );
  1528                           	bcf	status, 5	;RP0=0, select bank0
  1529  0325  1283               	movf	(keyUp@c+1),w
  1530  0326  081E               	movwf	(??_keyUp+0)+0+1
  1531  0327  0099               	movf	(keyUp@c),w
  1532  0328  081D               	movwf	(??_keyUp+0)+0
  1533  0329  0098               	movf	(??_keyUp+0)+1,w
  1534  032A  0819               	movwf	(??_keyUp+0)+0
  1535  032B  0098               	clrf	(??_keyUp+0)+1
  1536  032C  0199               	movlw	0FFh
  1537  032D  30FF               	andwf	0+(??_keyUp+0)+0,w
  1538  032E  0518               	movwf	(??_keyUp+2)+0
  1539  032F  009A               	movlw	0
  1540  0330  3000               	andwf	1+(??_keyUp+0)+0,w
  1541  0331  0519               	movwf	1+(??_keyUp+2)+0
  1542  0332  009B               		incf	((??_keyUp+2)+0),w
  1543  0333  0A1A               iorwf	((??_keyUp+2)+1),w
  1544  0334  041B               	btfsc	status,2
  1545  0335  1903               	goto	u731
  1546  0336  2B38               	goto	u730
  1547  0337  2B39               u731:
  1548  0338                     	goto	l178
  1549  0338  2B3C               u730:
  1550  0339                     	
  1551                           l1244:	
  1552  0339                     	movf	(keyUp@c+1),w
  1553  0339  081E               	fcall	_setPort
  1554  033A  2398               	goto	l178
  1555  033B  2B3C               	
  1556                           l177:	
  1557  033C                     	line	212
  1558                           	
  1559                           l178:	
  1560  033C                     	return
  1561  033C  0008               	opt stack 0
  1562                           GLOBAL	__end_of_keyUp
  1563                           	__end_of_keyUp:
  1564  033D                     	signat	_keyUp,4217
  1565                           	global	_resetPort
  1566                           
  1567 ;; *************** function _resetPort *****************
  1568 ;; Defined at:
  1569 ;;		line 193 in file "main.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  bit_id          1    wreg     unsigned char 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  bit_id          1    8[BANK0 ] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0
  1583 ;;      Params:         0       0
  1584 ;;      Locals:         0       1
  1585 ;;      Temps:          0       3
  1586 ;;      Totals:         0       4
  1587 ;;Total ram usage:        4 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    1
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_keyUp
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1597                           	line	193
  1598                           global __ptext4
  1599                           __ptext4:	;psect for function _resetPort
  1600  0379                     psect	text4
  1601                           	file	"main.c"
  1602                           	line	193
  1603                           	global	__size_of_resetPort
  1604                           	__size_of_resetPort	equ	__end_of_resetPort-_resetPort
  1605  001F                     	
  1606                           _resetPort:	
  1607  0379                     ;incstack = 0
  1608                           	opt	stack 5
  1609                           ; Regs used in _resetPort: [wreg-fsr0h+status,2+status,0]
  1610                           ;resetPort@bit_id stored from wreg
  1611                           	bcf	status, 5	;RP0=0, select bank0
  1612  0379  1283               	movwf	(resetPort@bit_id)
  1613  037A  0094               	line	195
  1614                           	
  1615                           l1180:	
  1616  037B                     ;main.c: 193: void resetPort(uint8_t bit_id);main.c: 194: {;main.c: 195:     outPorts[bi
                                 t_id & 0x07] &= ~(1 << (bit_id >> 4));
  1617                           	movlw	low(01h)
  1618  037B  3001               	movwf	(??_resetPort+0)+0
  1619  037C  0091               	movf	(resetPort@bit_id),w
  1620  037D  0814               	movwf	(??_resetPort+1)+0
  1621  037E  0092               	movlw	04h
  1622  037F  3004               u685:
  1623  0380                     	clrc
  1624  0380  1003               	rrf	(??_resetPort+1)+0,f
  1625  0381  0C92               	addlw	-1
  1626  0382  3EFF               	skipz
  1627  0383  1D03               	goto	u685
  1628  0384  2B80               	movf	0+(??_resetPort+1)+0,w
  1629  0385  0812               	addlw	1
  1630  0386  3E01               	goto	u694
  1631  0387  2B8A               u695:
  1632  0388                     	clrc
  1633  0388  1003               	rlf	(??_resetPort+0)+0,f
  1634  0389  0D91               u694:
  1635  038A                     	addlw	-1
  1636  038A  3EFF               	skipz
  1637  038B  1D03               	goto	u695
  1638  038C  2B88               	movf	0+(??_resetPort+0)+0,w
  1639  038D  0811               	xorlw	0ffh
  1640  038E  3AFF               	movwf	(??_resetPort+2)+0
  1641  038F  0093               	movf	(resetPort@bit_id),w
  1642  0390  0814               	andlw	07h
  1643  0391  3907               	addlw	low(_outPorts|((0x0)<<8))&0ffh
  1644  0392  3E31               	movwf	fsr0
  1645  0393  0084               	movf	(??_resetPort+2)+0,w
  1646  0394  0813               	bcf	status, 7	;select IRP bank0
  1647  0395  1383               	andwf	indf,f
  1648  0396  0580               	line	196
  1649                           	
  1650                           l168:	
  1651  0397                     	return
  1652  0397  0008               	opt stack 0
  1653                           GLOBAL	__end_of_resetPort
  1654                           	__end_of_resetPort:
  1655  0398                     	signat	_resetPort,4217
  1656                           	global	_keyDown
  1657                           
  1658 ;; *************** function _keyDown *****************
  1659 ;; Defined at:
  1660 ;;		line 200 in file "main.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  key             1    wreg     unsigned char 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  key             1   16[BANK0 ] unsigned char 
  1665 ;;  c               2   17[BANK0 ] unsigned int 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0
  1675 ;;      Params:         0       0
  1676 ;;      Locals:         0       3
  1677 ;;      Temps:          0       4
  1678 ;;      Totals:         0       7
  1679 ;;Total ram usage:        7 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; Hardware stack levels required when called:    2
  1682 ;; This function calls:
  1683 ;;		_codeToMatrix
  1684 ;;		_setPort
  1685 ;; This function is called by:
  1686 ;;		_main
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1690                           	line	200
  1691                           global __ptext5
  1692                           __ptext5:	;psect for function _keyDown
  1693  033D                     psect	text5
  1694                           	file	"main.c"
  1695                           	line	200
  1696                           	global	__size_of_keyDown
  1697                           	__size_of_keyDown	equ	__end_of_keyDown-_keyDown
  1698  003C                     	
  1699                           _keyDown:	
  1700  033D                     ;incstack = 0
  1701                           	opt	stack 5
  1702                           ; Regs used in _keyDown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1703                           ;keyDown@key stored from wreg
  1704                           	bcf	status, 5	;RP0=0, select bank0
  1705  033D  1283               	movwf	(keyDown@key)
  1706  033E  009C               	line	202
  1707                           	
  1708                           l1226:	
  1709  033F                     ;main.c: 200: void keyDown(uint8_t key);main.c: 201: {;main.c: 202:     uint16_t c = cod
                                 eToMatrix(key, shift, capsLock, numLock );
  1710                           	movf	(_shift),w
  1711  033F  082B               	movwf	(??_keyDown+0)+0
  1712  0340  0098               	movf	(??_keyDown+0)+0,w
  1713  0341  0818               	movwf	(codeToMatrix@s)
  1714  0342  0091               	movf	(_capsLock),w
  1715  0343  082A               	movwf	(??_keyDown+1)+0
  1716  0344  0099               	movf	(??_keyDown+1)+0,w
  1717  0345  0819               	movwf	(codeToMatrix@c)
  1718  0346  0092               	movf	(_numLock),w
  1719  0347  0829               	movwf	(??_keyDown+2)+0
  1720  0348  009A               	movf	(??_keyDown+2)+0,w
  1721  0349  081A               	movwf	(codeToMatrix@n)
  1722  034A  0093               	movf	(keyDown@key),w
  1723  034B  081C               	fcall	_codeToMatrix
  1724  034C  202B               	bcf	status, 5	;RP0=0, select bank0
  1725  034D  1283               	movf	(1+(?_codeToMatrix)),w
  1726  034E  0812               	movwf	(keyDown@c+1)
  1727  034F  009E               	movf	(0+(?_codeToMatrix)),w
  1728  0350  0811               	movwf	(keyDown@c)
  1729  0351  009D               	line	203
  1730                           	
  1731                           l1228:	
  1732  0352                     ;main.c: 203:     if ( (c & 0xFF) != 0xFF ) setPort(c & 0xFF );
  1733                           	movlw	0FFh
  1734  0352  30FF               	andwf	(keyDown@c),w
  1735  0353  051D               	movwf	(??_keyDown+0)+0
  1736  0354  0098               	movlw	0
  1737  0355  3000               	andwf	(keyDown@c+1),w
  1738  0356  051E               	movwf	1+(??_keyDown+0)+0
  1739  0357  0099               		incf	((??_keyDown+0)+0),w
  1740  0358  0A18               iorwf	((??_keyDown+0)+1),w
  1741  0359  0419               	btfsc	status,2
  1742  035A  1903               	goto	u701
  1743  035B  2B5D               	goto	u700
  1744  035C  2B5E               u701:
  1745  035D                     	goto	l1232
  1746  035D  2B61               u700:
  1747  035E                     	
  1748                           l1230:	
  1749  035E                     	movf	(keyDown@c),w
  1750  035E  081D               	fcall	_setPort
  1751  035F  2398               	goto	l1232
  1752  0360  2B61               	
  1753                           l171:	
  1754  0361                     	line	204
  1755                           	
  1756                           l1232:	
  1757  0361                     ;main.c: 204:     if ( (( c >> 8 ) & 0xFF) != 0xFF ) setPort( (c >> 8 ) & 0xFF );
  1758                           	bcf	status, 5	;RP0=0, select bank0
  1759  0361  1283               	movf	(keyDown@c+1),w
  1760  0362  081E               	movwf	(??_keyDown+0)+0+1
  1761  0363  0099               	movf	(keyDown@c),w
  1762  0364  081D               	movwf	(??_keyDown+0)+0
  1763  0365  0098               	movf	(??_keyDown+0)+1,w
  1764  0366  0819               	movwf	(??_keyDown+0)+0
  1765  0367  0098               	clrf	(??_keyDown+0)+1
  1766  0368  0199               	movlw	0FFh
  1767  0369  30FF               	andwf	0+(??_keyDown+0)+0,w
  1768  036A  0518               	movwf	(??_keyDown+2)+0
  1769  036B  009A               	movlw	0
  1770  036C  3000               	andwf	1+(??_keyDown+0)+0,w
  1771  036D  0519               	movwf	1+(??_keyDown+2)+0
  1772  036E  009B               		incf	((??_keyDown+2)+0),w
  1773  036F  0A1A               iorwf	((??_keyDown+2)+1),w
  1774  0370  041B               	btfsc	status,2
  1775  0371  1903               	goto	u711
  1776  0372  2B74               	goto	u710
  1777  0373  2B75               u711:
  1778  0374                     	goto	l173
  1779  0374  2B78               u710:
  1780  0375                     	
  1781                           l1234:	
  1782  0375                     	movf	(keyDown@c+1),w
  1783  0375  081E               	fcall	_setPort
  1784  0376  2398               	goto	l173
  1785  0377  2B78               	
  1786                           l172:	
  1787  0378                     	line	205
  1788                           	
  1789                           l173:	
  1790  0378                     	return
  1791  0378  0008               	opt stack 0
  1792                           GLOBAL	__end_of_keyDown
  1793                           	__end_of_keyDown:
  1794  0379                     	signat	_keyDown,4217
  1795                           	global	_setPort
  1796                           
  1797 ;; *************** function _setPort *****************
  1798 ;; Defined at:
  1799 ;;		line 188 in file "main.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  bit_id          1    wreg     unsigned char 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  bit_id          1    8[BANK0 ] unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0
  1813 ;;      Params:         0       0
  1814 ;;      Locals:         0       1
  1815 ;;      Temps:          0       3
  1816 ;;      Totals:         0       4
  1817 ;;Total ram usage:        4 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    1
  1820 ;; This function calls:
  1821 ;;		Nothing
  1822 ;; This function is called by:
  1823 ;;		_keyDown
  1824 ;;		_keyUp
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1828                           	line	188
  1829                           global __ptext6
  1830                           __ptext6:	;psect for function _setPort
  1831  0398                     psect	text6
  1832                           	file	"main.c"
  1833                           	line	188
  1834                           	global	__size_of_setPort
  1835                           	__size_of_setPort	equ	__end_of_setPort-_setPort
  1836  001E                     	
  1837                           _setPort:	
  1838  0398                     ;incstack = 0
  1839                           	opt	stack 5
  1840                           ; Regs used in _setPort: [wreg-fsr0h+status,2+status,0]
  1841                           ;setPort@bit_id stored from wreg
  1842                           	bcf	status, 5	;RP0=0, select bank0
  1843  0398  1283               	movwf	(setPort@bit_id)
  1844  0399  0094               	line	190
  1845                           	
  1846                           l1178:	
  1847  039A                     ;main.c: 188: void setPort(uint8_t bit_id);main.c: 189: {;main.c: 190:     outPorts[bit_
                                 id & 0x07] |= (1 << (bit_id >> 4));
  1848                           	movlw	low(01h)
  1849  039A  3001               	movwf	(??_setPort+0)+0
  1850  039B  0091               	movf	(setPort@bit_id),w
  1851  039C  0814               	movwf	(??_setPort+1)+0
  1852  039D  0092               	movlw	04h
  1853  039E  3004               u665:
  1854  039F                     	clrc
  1855  039F  1003               	rrf	(??_setPort+1)+0,f
  1856  03A0  0C92               	addlw	-1
  1857  03A1  3EFF               	skipz
  1858  03A2  1D03               	goto	u665
  1859  03A3  2B9F               	movf	0+(??_setPort+1)+0,w
  1860  03A4  0812               	addlw	1
  1861  03A5  3E01               	goto	u674
  1862  03A6  2BA9               u675:
  1863  03A7                     	clrc
  1864  03A7  1003               	rlf	(??_setPort+0)+0,f
  1865  03A8  0D91               u674:
  1866  03A9                     	addlw	-1
  1867  03A9  3EFF               	skipz
  1868  03AA  1D03               	goto	u675
  1869  03AB  2BA7               	movf	0+(??_setPort+0)+0,w
  1870  03AC  0811               	movwf	(??_setPort+2)+0
  1871  03AD  0093               	movf	(setPort@bit_id),w
  1872  03AE  0814               	andlw	07h
  1873  03AF  3907               	addlw	low(_outPorts|((0x0)<<8))&0ffh
  1874  03B0  3E31               	movwf	fsr0
  1875  03B1  0084               	movf	(??_setPort+2)+0,w
  1876  03B2  0813               	bcf	status, 7	;select IRP bank0
  1877  03B3  1383               	iorwf	indf,f
  1878  03B4  0480               	line	191
  1879                           	
  1880                           l165:	
  1881  03B5                     	return
  1882  03B5  0008               	opt stack 0
  1883                           GLOBAL	__end_of_setPort
  1884                           	__end_of_setPort:
  1885  03B6                     	signat	_setPort,4217
  1886                           	global	_codeToMatrix
  1887                           
  1888 ;; *************** function _codeToMatrix *****************
  1889 ;; Defined at:
  1890 ;;		line 27 in file "./ps2tozxtable.h"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  k               1    wreg     unsigned char 
  1893 ;;  s               1    5[BANK0 ] unsigned char 
  1894 ;;  c               1    6[BANK0 ] unsigned char 
  1895 ;;  n               1    7[BANK0 ] unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  k               1    0[BANK0 ] unsigned char 
  1898 ;;  r               2   10[BANK0 ] unsigned int 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  2    5[BANK0 ] unsigned int 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0
  1908 ;;      Params:         0       3
  1909 ;;      Locals:         0       2
  1910 ;;      Temps:          0       2
  1911 ;;      Totals:         0       7
  1912 ;;Total ram usage:        7 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_keyDown
  1919 ;;		_keyUp
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  1923                           	file	"./ps2tozxtable.h"
  1924                           	line	27
  1925                           global __ptext7
  1926                           __ptext7:	;psect for function _codeToMatrix
  1927  002B                     psect	text7
  1928                           	file	"./ps2tozxtable.h"
  1929                           	line	27
  1930                           	global	__size_of_codeToMatrix
  1931                           	__size_of_codeToMatrix	equ	__end_of_codeToMatrix-_codeToMatrix
  1932  00FD                     	
  1933                           _codeToMatrix:	
  1934  002B                     ;incstack = 0
  1935                           	opt	stack 5
  1936                           ; Regs used in _codeToMatrix: [wreg-fsr0h+status,2+status,0]
  1937                           	line	31
  1938                           	
  1939                           l1104:	
  1940  002B                     ;./ps2tozxtable.h: 27: uint16_t codeToMatrix(uint8_t k, uint8_t s, uint8_t c, uint8_t n)
                                 ;./ps2tozxtable.h: 28: {;./ps2tozxtable.h: 29:     uint16_t r;;./ps2tozxtable.h: 31:    
                                  switch (c) {
  1941                           	goto	l1168
  1942  002B  28EA               	line	32
  1943                           ;./ps2tozxtable.h: 32:         case 0x5A:
  1944                           	
  1945                           l36:	
  1946  002C                     	line	33
  1947                           ;./ps2tozxtable.h: 33:             r = 0xFF06;
  1948                           	movlw	06h
  1949  002C  3006               	movwf	(codeToMatrix@r)
  1950  002D  0096               	movlw	0FFh
  1951  002E  30FF               	movwf	((codeToMatrix@r))+1
  1952  002F  0097               	line	34
  1953                           ;./ps2tozxtable.h: 34:             break;
  1954                           	goto	l1170
  1955  0030  2922               	line	35
  1956                           ;./ps2tozxtable.h: 35:         case 0xFB:
  1957                           	
  1958                           l38:	
  1959  0031                     	line	36
  1960                           ;./ps2tozxtable.h: 36:             r = 0x0043;
  1961                           	movlw	043h
  1962  0031  3043               	movwf	(codeToMatrix@r)
  1963  0032  0096               	movlw	0
  1964  0033  3000               	movwf	((codeToMatrix@r))+1
  1965  0034  0097               	line	37
  1966                           ;./ps2tozxtable.h: 37:             break;
  1967                           	goto	l1170
  1968  0035  2922               	line	38
  1969                           ;./ps2tozxtable.h: 38:         case 0xF4:
  1970                           	
  1971                           l39:	
  1972  0036                     	line	39
  1973                           ;./ps2tozxtable.h: 39:             r = 0x0024;
  1974                           	movlw	024h
  1975  0036  3024               	movwf	(codeToMatrix@r)
  1976  0037  0096               	movlw	0
  1977  0038  3000               	movwf	((codeToMatrix@r))+1
  1978  0039  0097               	line	40
  1979                           ;./ps2tozxtable.h: 40:             break;
  1980                           	goto	l1170
  1981  003A  2922               	line	41
  1982                           ;./ps2tozxtable.h: 41:         case 0xF5:
  1983                           	
  1984                           l40:	
  1985  003B                     	line	42
  1986                           ;./ps2tozxtable.h: 42:             r = 0x0034;
  1987                           	movlw	034h
  1988  003B  3034               	movwf	(codeToMatrix@r)
  1989  003C  0096               	movlw	0
  1990  003D  3000               	movwf	((codeToMatrix@r))+1
  1991  003E  0097               	line	43
  1992                           ;./ps2tozxtable.h: 43:             break;
  1993                           	goto	l1170
  1994  003F  2922               	line	44
  1995                           ;./ps2tozxtable.h: 44:         case 0xF2:
  1996                           	
  1997                           l41:	
  1998  0040                     	line	45
  1999                           ;./ps2tozxtable.h: 45:             r = 0x0044;
  2000                           	movlw	044h
  2001  0040  3044               	movwf	(codeToMatrix@r)
  2002  0041  0096               	movlw	0
  2003  0042  3000               	movwf	((codeToMatrix@r))+1
  2004  0043  0097               	line	46
  2005                           ;./ps2tozxtable.h: 46:             break;
  2006                           	goto	l1170
  2007  0044  2922               	line	47
  2008                           ;./ps2tozxtable.h: 47:         case 0x16:
  2009                           	
  2010                           l42:	
  2011  0045                     	line	48
  2012                           	
  2013                           l1106:	
  2014  0045                     ;./ps2tozxtable.h: 48:             r = (s) ? 0x1703 : 0xFF03;
  2015                           	movf	((codeToMatrix@s)),w
  2016  0045  0811               	btfss	status,2
  2017  0046  1D03               	goto	u561
  2018  0047  2849               	goto	u560
  2019  0048  284A               u561:
  2020  0049                     	goto	l1110
  2021  0049  284F               u560:
  2022  004A                     	
  2023                           l1108:	
  2024  004A                     	movlw	03h
  2025  004A  3003               	movwf	(codeToMatrix@r)
  2026  004B  0096               	movlw	0FFh
  2027  004C  30FF               	movwf	((codeToMatrix@r))+1
  2028  004D  0097               	goto	l1170
  2029  004E  2922               	
  2030                           l44:	
  2031  004F                     	
  2032                           l1110:	
  2033  004F                     	movlw	03h
  2034  004F  3003               	movwf	(codeToMatrix@r)
  2035  0050  0096               	movlw	017h
  2036  0051  3017               	movwf	((codeToMatrix@r))+1
  2037  0052  0097               	goto	l1170
  2038  0053  2922               	
  2039                           l46:	
  2040  0054                     	line	49
  2041                           ;./ps2tozxtable.h: 49:             break;
  2042                           	goto	l1170
  2043  0054  2922               	line	50
  2044                           ;./ps2tozxtable.h: 50:         case 0x1E:
  2045                           	
  2046                           l47:	
  2047  0055                     	line	51
  2048                           	
  2049                           l1112:	
  2050  0055                     ;./ps2tozxtable.h: 51:             r = (s) ? 0x1713 : 0xFF13;
  2051                           	movf	((codeToMatrix@s)),w
  2052  0055  0811               	btfss	status,2
  2053  0056  1D03               	goto	u571
  2054  0057  2859               	goto	u570
  2055  0058  285A               u571:
  2056  0059                     	goto	l1116
  2057  0059  285F               u570:
  2058  005A                     	
  2059                           l1114:	
  2060  005A                     	movlw	013h
  2061  005A  3013               	movwf	(codeToMatrix@r)
  2062  005B  0096               	movlw	0FFh
  2063  005C  30FF               	movwf	((codeToMatrix@r))+1
  2064  005D  0097               	goto	l1170
  2065  005E  2922               	
  2066                           l49:	
  2067  005F                     	
  2068                           l1116:	
  2069  005F                     	movlw	013h
  2070  005F  3013               	movwf	(codeToMatrix@r)
  2071  0060  0096               	movlw	017h
  2072  0061  3017               	movwf	((codeToMatrix@r))+1
  2073  0062  0097               	goto	l1170
  2074  0063  2922               	
  2075                           l51:	
  2076  0064                     	line	52
  2077                           ;./ps2tozxtable.h: 52:             break;
  2078                           	goto	l1170
  2079  0064  2922               	line	53
  2080                           ;./ps2tozxtable.h: 53:         case 0x26:
  2081                           	
  2082                           l52:	
  2083  0065                     	line	54
  2084                           	
  2085                           l1118:	
  2086  0065                     ;./ps2tozxtable.h: 54:             r = (s) ? 0x1723 : 0xFF23;
  2087                           	movf	((codeToMatrix@s)),w
  2088  0065  0811               	btfss	status,2
  2089  0066  1D03               	goto	u581
  2090  0067  2869               	goto	u580
  2091  0068  286A               u581:
  2092  0069                     	goto	l1122
  2093  0069  286F               u580:
  2094  006A                     	
  2095                           l1120:	
  2096  006A                     	movlw	023h
  2097  006A  3023               	movwf	(codeToMatrix@r)
  2098  006B  0096               	movlw	0FFh
  2099  006C  30FF               	movwf	((codeToMatrix@r))+1
  2100  006D  0097               	goto	l1170
  2101  006E  2922               	
  2102                           l54:	
  2103  006F                     	
  2104                           l1122:	
  2105  006F                     	movlw	023h
  2106  006F  3023               	movwf	(codeToMatrix@r)
  2107  0070  0096               	movlw	017h
  2108  0071  3017               	movwf	((codeToMatrix@r))+1
  2109  0072  0097               	goto	l1170
  2110  0073  2922               	
  2111                           l56:	
  2112  0074                     	line	55
  2113                           ;./ps2tozxtable.h: 55:             break;
  2114                           	goto	l1170
  2115  0074  2922               	line	56
  2116                           ;./ps2tozxtable.h: 56:         case 0x25:
  2117                           	
  2118                           l57:	
  2119  0075                     	line	57
  2120                           	
  2121                           l1124:	
  2122  0075                     ;./ps2tozxtable.h: 57:             r = (s) ? 0x1733 : 0xFF33;
  2123                           	movf	((codeToMatrix@s)),w
  2124  0075  0811               	btfss	status,2
  2125  0076  1D03               	goto	u591
  2126  0077  2879               	goto	u590
  2127  0078  287A               u591:
  2128  0079                     	goto	l1128
  2129  0079  287F               u590:
  2130  007A                     	
  2131                           l1126:	
  2132  007A                     	movlw	033h
  2133  007A  3033               	movwf	(codeToMatrix@r)
  2134  007B  0096               	movlw	0FFh
  2135  007C  30FF               	movwf	((codeToMatrix@r))+1
  2136  007D  0097               	goto	l1170
  2137  007E  2922               	
  2138                           l59:	
  2139  007F                     	
  2140                           l1128:	
  2141  007F                     	movlw	033h
  2142  007F  3033               	movwf	(codeToMatrix@r)
  2143  0080  0096               	movlw	017h
  2144  0081  3017               	movwf	((codeToMatrix@r))+1
  2145  0082  0097               	goto	l1170
  2146  0083  2922               	
  2147                           l61:	
  2148  0084                     	line	58
  2149                           ;./ps2tozxtable.h: 58:             break;
  2150                           	goto	l1170
  2151  0084  2922               	line	59
  2152                           ;./ps2tozxtable.h: 59:         case 0x2E:
  2153                           	
  2154                           l62:	
  2155  0085                     	line	60
  2156                           	
  2157                           l1130:	
  2158  0085                     ;./ps2tozxtable.h: 60:             r = (s) ? 0x1743 : 0xFF43;
  2159                           	movf	((codeToMatrix@s)),w
  2160  0085  0811               	btfss	status,2
  2161  0086  1D03               	goto	u601
  2162  0087  2889               	goto	u600
  2163  0088  288A               u601:
  2164  0089                     	goto	l1134
  2165  0089  288F               u600:
  2166  008A                     	
  2167                           l1132:	
  2168  008A                     	movlw	043h
  2169  008A  3043               	movwf	(codeToMatrix@r)
  2170  008B  0096               	movlw	0FFh
  2171  008C  30FF               	movwf	((codeToMatrix@r))+1
  2172  008D  0097               	goto	l1170
  2173  008E  2922               	
  2174                           l64:	
  2175  008F                     	
  2176                           l1134:	
  2177  008F                     	movlw	043h
  2178  008F  3043               	movwf	(codeToMatrix@r)
  2179  0090  0096               	movlw	017h
  2180  0091  3017               	movwf	((codeToMatrix@r))+1
  2181  0092  0097               	goto	l1170
  2182  0093  2922               	
  2183                           l66:	
  2184  0094                     	line	61
  2185                           ;./ps2tozxtable.h: 61:             break;
  2186                           	goto	l1170
  2187  0094  2922               	line	62
  2188                           ;./ps2tozxtable.h: 62:         case 0x36:
  2189                           	
  2190                           l67:	
  2191  0095                     	line	63
  2192                           	
  2193                           l1136:	
  2194  0095                     ;./ps2tozxtable.h: 63:             r = (s) ? 0x1746 : 0xFF44;
  2195                           	movf	((codeToMatrix@s)),w
  2196  0095  0811               	btfss	status,2
  2197  0096  1D03               	goto	u611
  2198  0097  2899               	goto	u610
  2199  0098  289A               u611:
  2200  0099                     	goto	l1140
  2201  0099  289F               u610:
  2202  009A                     	
  2203                           l1138:	
  2204  009A                     	movlw	044h
  2205  009A  3044               	movwf	(codeToMatrix@r)
  2206  009B  0096               	movlw	0FFh
  2207  009C  30FF               	movwf	((codeToMatrix@r))+1
  2208  009D  0097               	goto	l1170
  2209  009E  2922               	
  2210                           l69:	
  2211  009F                     	
  2212                           l1140:	
  2213  009F                     	movlw	046h
  2214  009F  3046               	movwf	(codeToMatrix@r)
  2215  00A0  0096               	movlw	017h
  2216  00A1  3017               	movwf	((codeToMatrix@r))+1
  2217  00A2  0097               	goto	l1170
  2218  00A3  2922               	
  2219                           l71:	
  2220  00A4                     	line	64
  2221                           ;./ps2tozxtable.h: 64:             break;
  2222                           	goto	l1170
  2223  00A4  2922               	line	65
  2224                           ;./ps2tozxtable.h: 65:         case 0x3D:
  2225                           	
  2226                           l72:	
  2227  00A5                     	line	66
  2228                           	
  2229                           l1142:	
  2230  00A5                     ;./ps2tozxtable.h: 66:             r = (s) ? 0x1744 : 0xFF34;
  2231                           	movf	((codeToMatrix@s)),w
  2232  00A5  0811               	btfss	status,2
  2233  00A6  1D03               	goto	u621
  2234  00A7  28A9               	goto	u620
  2235  00A8  28AA               u621:
  2236  00A9                     	goto	l1146
  2237  00A9  28AF               u620:
  2238  00AA                     	
  2239                           l1144:	
  2240  00AA                     	movlw	034h
  2241  00AA  3034               	movwf	(codeToMatrix@r)
  2242  00AB  0096               	movlw	0FFh
  2243  00AC  30FF               	movwf	((codeToMatrix@r))+1
  2244  00AD  0097               	goto	l1170
  2245  00AE  2922               	
  2246                           l74:	
  2247  00AF                     	
  2248                           l1146:	
  2249  00AF                     	movlw	044h
  2250  00AF  3044               	movwf	(codeToMatrix@r)
  2251  00B0  0096               	movlw	017h
  2252  00B1  3017               	movwf	((codeToMatrix@r))+1
  2253  00B2  0097               	goto	l1170
  2254  00B3  2922               	
  2255                           l76:	
  2256  00B4                     	line	67
  2257                           ;./ps2tozxtable.h: 67:             break;
  2258                           	goto	l1170
  2259  00B4  2922               	line	68
  2260                           ;./ps2tozxtable.h: 68:         case 0x3E:
  2261                           	
  2262                           l77:	
  2263  00B5                     	line	69
  2264                           	
  2265                           l1148:	
  2266  00B5                     ;./ps2tozxtable.h: 69:             r = (s) ? 0x1747 : 0xFF24;
  2267                           	movf	((codeToMatrix@s)),w
  2268  00B5  0811               	btfss	status,2
  2269  00B6  1D03               	goto	u631
  2270  00B7  28B9               	goto	u630
  2271  00B8  28BA               u631:
  2272  00B9                     	goto	l1152
  2273  00B9  28BF               u630:
  2274  00BA                     	
  2275                           l1150:	
  2276  00BA                     	movlw	024h
  2277  00BA  3024               	movwf	(codeToMatrix@r)
  2278  00BB  0096               	movlw	0FFh
  2279  00BC  30FF               	movwf	((codeToMatrix@r))+1
  2280  00BD  0097               	goto	l1170
  2281  00BE  2922               	
  2282                           l79:	
  2283  00BF                     	
  2284                           l1152:	
  2285  00BF                     	movlw	047h
  2286  00BF  3047               	movwf	(codeToMatrix@r)
  2287  00C0  0096               	movlw	017h
  2288  00C1  3017               	movwf	((codeToMatrix@r))+1
  2289  00C2  0097               	goto	l1170
  2290  00C3  2922               	
  2291                           l81:	
  2292  00C4                     	line	70
  2293                           ;./ps2tozxtable.h: 70:             break;
  2294                           	goto	l1170
  2295  00C4  2922               	line	71
  2296                           ;./ps2tozxtable.h: 71:         case 0x46:
  2297                           	
  2298                           l82:	
  2299  00C5                     	line	72
  2300                           	
  2301                           l1154:	
  2302  00C5                     ;./ps2tozxtable.h: 72:             r = (s) ? 0x1724 : 0xFF14;
  2303                           	movf	((codeToMatrix@s)),w
  2304  00C5  0811               	btfss	status,2
  2305  00C6  1D03               	goto	u641
  2306  00C7  28C9               	goto	u640
  2307  00C8  28CA               u641:
  2308  00C9                     	goto	l1158
  2309  00C9  28CF               u640:
  2310  00CA                     	
  2311                           l1156:	
  2312  00CA                     	movlw	014h
  2313  00CA  3014               	movwf	(codeToMatrix@r)
  2314  00CB  0096               	movlw	0FFh
  2315  00CC  30FF               	movwf	((codeToMatrix@r))+1
  2316  00CD  0097               	goto	l1170
  2317  00CE  2922               	
  2318                           l84:	
  2319  00CF                     	
  2320                           l1158:	
  2321  00CF                     	movlw	024h
  2322  00CF  3024               	movwf	(codeToMatrix@r)
  2323  00D0  0096               	movlw	017h
  2324  00D1  3017               	movwf	((codeToMatrix@r))+1
  2325  00D2  0097               	goto	l1170
  2326  00D3  2922               	
  2327                           l86:	
  2328  00D4                     	line	73
  2329                           ;./ps2tozxtable.h: 73:             break;
  2330                           	goto	l1170
  2331  00D4  2922               	line	74
  2332                           ;./ps2tozxtable.h: 74:         case 0x45:
  2333                           	
  2334                           l87:	
  2335  00D5                     	line	75
  2336                           	
  2337                           l1160:	
  2338  00D5                     ;./ps2tozxtable.h: 75:             r = (s) ? 0x1714 : 0xFF04;
  2339                           	movf	((codeToMatrix@s)),w
  2340  00D5  0811               	btfss	status,2
  2341  00D6  1D03               	goto	u651
  2342  00D7  28D9               	goto	u650
  2343  00D8  28DA               u651:
  2344  00D9                     	goto	l1164
  2345  00D9  28DF               u650:
  2346  00DA                     	
  2347                           l1162:	
  2348  00DA                     	movlw	04h
  2349  00DA  3004               	movwf	(codeToMatrix@r)
  2350  00DB  0096               	movlw	0FFh
  2351  00DC  30FF               	movwf	((codeToMatrix@r))+1
  2352  00DD  0097               	goto	l1170
  2353  00DE  2922               	
  2354                           l89:	
  2355  00DF                     	
  2356                           l1164:	
  2357  00DF                     	movlw	014h
  2358  00DF  3014               	movwf	(codeToMatrix@r)
  2359  00E0  0096               	movlw	017h
  2360  00E1  3017               	movwf	((codeToMatrix@r))+1
  2361  00E2  0097               	goto	l1170
  2362  00E3  2922               	
  2363                           l91:	
  2364  00E4                     	line	76
  2365                           ;./ps2tozxtable.h: 76:             break;
  2366                           	goto	l1170
  2367  00E4  2922               	line	77
  2368                           ;./ps2tozxtable.h: 77:         default:
  2369                           	
  2370                           l92:	
  2371  00E5                     	line	78
  2372                           	
  2373                           l1166:	
  2374  00E5                     ;./ps2tozxtable.h: 78:             r = 0xFFFF;
  2375                           	movlw	0FFh
  2376  00E5  30FF               	movwf	(codeToMatrix@r)
  2377  00E6  0096               	movlw	0FFh
  2378  00E7  30FF               	movwf	((codeToMatrix@r))+1
  2379  00E8  0097               	line	79
  2380                           ;./ps2tozxtable.h: 79:     }
  2381                           	goto	l1170
  2382  00E9  2922               	
  2383                           l35:	
  2384  00EA                     	
  2385                           l1168:	
  2386  00EA                     	bcf	status, 5	;RP0=0, select bank0
  2387  00EA  1283               	movf	(codeToMatrix@c),w
  2388  00EB  0812               	movwf	(??_codeToMatrix+0)+0
  2389  00EC  0094               	clrf	(??_codeToMatrix+0)+0+1
  2390  00ED  0195               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2391                           ; Switch size 1, requested type "space"
  2392                           ; Number of cases is 1, Range of values is 0 to 0
  2393                           ; switch strategies available:
  2394                           ; Name         Instructions Cycles
  2395                           ; simple_byte            4     3 (average)
  2396                           ; direct_byte            7     6 (fixed)
  2397                           ; jumptable            260     6 (fixed)
  2398                           ;	Chosen strategy is simple_byte
  2399                           
  2400                           	movf 1+(??_codeToMatrix+0)+0,w
  2401  00EE  0815               	opt asmopt_push
  2402                           	opt asmopt_off
  2403                           	xorlw	0^0	; case 0
  2404  00EF  3A00               	skipnz
  2405  00F0  1903               	goto	l1424
  2406  00F1  28F3               	goto	l1166
  2407  00F2  28E5               	opt asmopt_pop
  2408                           	
  2409                           l1424:	
  2410  00F3                     ; Switch size 1, requested type "space"
  2411                           ; Number of cases is 15, Range of values is 22 to 251
  2412                           ; switch strategies available:
  2413                           ; Name         Instructions Cycles
  2414                           ; simple_byte           46    24 (average)
  2415                           ; direct_byte          239     9 (fixed)
  2416                           ; jumptable            263     9 (fixed)
  2417                           ;	Chosen strategy is simple_byte
  2418                           
  2419                           	movf 0+(??_codeToMatrix+0)+0,w
  2420  00F3  0814               	opt asmopt_push
  2421                           	opt asmopt_off
  2422                           	xorlw	22^0	; case 22
  2423  00F4  3A16               	skipnz
  2424  00F5  1903               	goto	l1106
  2425  00F6  2845               	xorlw	30^22	; case 30
  2426  00F7  3A08               	skipnz
  2427  00F8  1903               	goto	l1112
  2428  00F9  2855               	xorlw	37^30	; case 37
  2429  00FA  3A3B               	skipnz
  2430  00FB  1903               	goto	l1124
  2431  00FC  2875               	xorlw	38^37	; case 38
  2432  00FD  3A03               	skipnz
  2433  00FE  1903               	goto	l1118
  2434  00FF  2865               	xorlw	46^38	; case 46
  2435  0100  3A08               	skipnz
  2436  0101  1903               	goto	l1130
  2437  0102  2885               	xorlw	54^46	; case 54
  2438  0103  3A18               	skipnz
  2439  0104  1903               	goto	l1136
  2440  0105  2895               	xorlw	61^54	; case 61
  2441  0106  3A0B               	skipnz
  2442  0107  1903               	goto	l1142
  2443  0108  28A5               	xorlw	62^61	; case 62
  2444  0109  3A03               	skipnz
  2445  010A  1903               	goto	l1148
  2446  010B  28B5               	xorlw	69^62	; case 69
  2447  010C  3A7B               	skipnz
  2448  010D  1903               	goto	l1160
  2449  010E  28D5               	xorlw	70^69	; case 70
  2450  010F  3A03               	skipnz
  2451  0110  1903               	goto	l1154
  2452  0111  28C5               	xorlw	90^70	; case 90
  2453  0112  3A1C               	skipnz
  2454  0113  1903               	goto	l36
  2455  0114  282C               	xorlw	242^90	; case 242
  2456  0115  3AA8               	skipnz
  2457  0116  1903               	goto	l41
  2458  0117  2840               	xorlw	244^242	; case 244
  2459  0118  3A06               	skipnz
  2460  0119  1903               	goto	l39
  2461  011A  2836               	xorlw	245^244	; case 245
  2462  011B  3A01               	skipnz
  2463  011C  1903               	goto	l40
  2464  011D  283B               	xorlw	251^245	; case 251
  2465  011E  3A0E               	skipnz
  2466  011F  1903               	goto	l38
  2467  0120  2831               	goto	l1166
  2468  0121  28E5               	opt asmopt_pop
  2469                           
  2470                           	
  2471                           l37:	
  2472  0122                     	line	80
  2473                           	
  2474                           l1170:	
  2475  0122                     ;./ps2tozxtable.h: 80:     return r;
  2476                           	movf	(codeToMatrix@r+1),w
  2477  0122  0817               	movwf	(?_codeToMatrix+1)
  2478  0123  0092               	movf	(codeToMatrix@r),w
  2479  0124  0816               	movwf	(?_codeToMatrix)
  2480  0125  0091               	goto	l93
  2481  0126  2927               	
  2482                           l1172:	
  2483  0127                     	line	81
  2484                           	
  2485                           l93:	
  2486  0127                     	return
  2487  0127  0008               	opt stack 0
  2488                           GLOBAL	__end_of_codeToMatrix
  2489                           	__end_of_codeToMatrix:
  2490  0128                     	signat	_codeToMatrix,16506
  2491                           	global	_myIsr
  2492                           
  2493 ;; *************** function _myIsr *****************
  2494 ;; Defined at:
  2495 ;;		line 142 in file "main.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0
  2509 ;;      Params:         0       0
  2510 ;;      Locals:         0       0
  2511 ;;      Temps:          0       5
  2512 ;;      Totals:         0       5
  2513 ;;Total ram usage:        5 bytes
  2514 ;; Hardware stack levels used:    1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		Interrupt level 1
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2522                           	file	"main.c"
  2523                           	line	142
  2524                           global __ptext8
  2525                           __ptext8:	;psect for function _myIsr
  2526  01E6                     psect	text8
  2527                           	file	"main.c"
  2528                           	line	142
  2529                           	global	__size_of_myIsr
  2530                           	__size_of_myIsr	equ	__end_of_myIsr-_myIsr
  2531  00B2                     	
  2532                           _myIsr:	
  2533  01E6                     ;incstack = 0
  2534                           	opt	stack 5
  2535                           ; Regs used in _myIsr: [wreg-fsr0h+status,2+status,0]
  2536                           psect	intentry,class=CODE,delta=2
  2537                           global __pintentry
  2538                           __pintentry:
  2539  0004                     global interrupt_function
  2540                           interrupt_function:
  2541  0004                     	global saved_w
  2542                           	saved_w	set	btemp+0
  2543  004E                     	movwf	saved_w
  2544  0004  00CE               	swapf	status,w
  2545  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  2546  0006  1283               	movwf	(??_myIsr+2)
  2547  0007  008E               	movf	fsr0,w
  2548  0008  0804               	movwf	(??_myIsr+3)
  2549  0009  008F               	movf	pclath,w
  2550  000A  080A               	movwf	(??_myIsr+4)
  2551  000B  0090               	ljmp	_myIsr
  2552  000C  29E6               psect	text8
  2553                           	line	144
  2554                           	
  2555                           i1l1246:	
  2556  01E6                     ;main.c: 144:     if(T0IE && T0IF){
  2557                           	btfss	(93/8),(93)&7	;volatile
  2558  01E6  1E8B               	goto	u74_21
  2559  01E7  29E9               	goto	u74_20
  2560  01E8  29EA               u74_21:
  2561  01E9                     	goto	i1l1302
  2562  01E9  2A8E               u74_20:
  2563  01EA                     	
  2564                           i1l1248:	
  2565  01EA                     	btfss	(90/8),(90)&7	;volatile
  2566  01EA  1D0B               	goto	u75_21
  2567  01EB  29ED               	goto	u75_20
  2568  01EC  29EE               u75_21:
  2569  01ED                     	goto	i1l1302
  2570  01ED  2A8E               u75_20:
  2571  01EE                     	line	146
  2572                           	
  2573                           i1l1250:	
  2574  01EE                     ;main.c: 146:         T0IF=0;
  2575                           	bcf	(90/8),(90)&7	;volatile
  2576  01EE  110B               	line	147
  2577                           	
  2578                           i1l1252:	
  2579  01EF                     ;main.c: 147:         TMR0 = 255;
  2580                           	movlw	low(0FFh)
  2581  01EF  30FF               	movwf	(1)	;volatile
  2582  01F0  0081               	line	150
  2583                           	
  2584                           i1l1254:	
  2585  01F1                     ;main.c: 150:         if ( ps2DataState == 0 || ps2DataState == 1 ) {
  2586                           	movf	((_ps2DataState)),w
  2587  01F1  0830               	btfsc	status,2
  2588  01F2  1903               	goto	u76_21
  2589  01F3  29F5               	goto	u76_20
  2590  01F4  29F6               u76_21:
  2591  01F5                     	goto	i1l143
  2592  01F5  29FB               u76_20:
  2593  01F6                     	
  2594                           i1l1256:	
  2595  01F6                     		decf	((_ps2DataState)),w
  2596  01F6  0330               	btfss	status,2
  2597  01F7  1D03               	goto	u77_21
  2598  01F8  29FA               	goto	u77_20
  2599  01F9  29FB               u77_21:
  2600  01FA                     	goto	i1l1264
  2601  01FA  2A0B               u77_20:
  2602  01FB                     	
  2603                           i1l143:	
  2604  01FB                     	line	151
  2605                           ;main.c: 151:             if ( !PORTAbits.RA4 && !PORTAbits.RA3 ) {
  2606                           	btfsc	(5),4	;volatile
  2607  01FB  1A05               	goto	u78_21
  2608  01FC  29FE               	goto	u78_20
  2609  01FD  29FF               u78_21:
  2610  01FE                     	goto	i1l1302
  2611  01FE  2A8E               u78_20:
  2612  01FF                     	
  2613                           i1l1258:	
  2614  01FF                     	btfsc	(5),3	;volatile
  2615  01FF  1985               	goto	u79_21
  2616  0200  2A02               	goto	u79_20
  2617  0201  2A03               u79_21:
  2618  0202                     	goto	i1l1302
  2619  0202  2A8E               u79_20:
  2620  0203                     	line	152
  2621                           	
  2622                           i1l1260:	
  2623  0203                     ;main.c: 152:                 ps2BitsCount = 0;
  2624                           	clrf	(_ps2BitsCount)
  2625  0203  01AE               	line	153
  2626                           ;main.c: 153:                 ps2Bits = 0;
  2627                           	clrf	(_ps2Bits)
  2628  0204  01AF               	line	154
  2629                           	
  2630                           i1l1262:	
  2631  0205                     ;main.c: 154:                 ps2DataState = 2;
  2632                           	movlw	low(02h)
  2633  0205  3002               	movwf	(??_myIsr+0)+0
  2634  0206  008C               	movf	(??_myIsr+0)+0,w
  2635  0207  080C               	movwf	(_ps2DataState)
  2636  0208  00B0               	goto	i1l1302
  2637  0209  2A8E               	line	155
  2638                           ;main.c: 155:             }
  2639                           	
  2640                           i1l144:	
  2641  020A                     	line	156
  2642                           ;main.c: 156:         } else if ( ps2DataState == 2 ) {
  2643                           	goto	i1l1302
  2644  020A  2A8E               	
  2645                           i1l141:	
  2646  020B                     	
  2647                           i1l1264:	
  2648  020B                     		movlw	2
  2649  020B  3002               	xorwf	((_ps2DataState)),w
  2650  020C  0630               	btfss	status,2
  2651  020D  1D03               	goto	u80_21
  2652  020E  2A10               	goto	u80_20
  2653  020F  2A11               u80_21:
  2654  0210                     	goto	i1l1302
  2655  0210  2A8E               u80_20:
  2656  0211                     	line	157
  2657                           	
  2658                           i1l1266:	
  2659  0211                     ;main.c: 157:             if ( ps2BitsCount < 8 ) {
  2660                           	movf	(_ps2BitsCount),w
  2661  0211  082E               	xorlw	80h
  2662  0212  3A80               	addlw	-((08h)^80h)
  2663  0213  3E78               	skipnc
  2664  0214  1803               	goto	u81_21
  2665  0215  2A17               	goto	u81_20
  2666  0216  2A18               u81_21:
  2667  0217                     	goto	i1l1272
  2668  0217  2A2E               u81_20:
  2669  0218                     	line	158
  2670                           	
  2671                           i1l1268:	
  2672  0218                     ;main.c: 158:                 if ( PORTAbits.RA3 ) {
  2673                           	btfss	(5),3	;volatile
  2674  0218  1D85               	goto	u82_21
  2675  0219  2A1B               	goto	u82_20
  2676  021A  2A1C               u82_21:
  2677  021B                     	goto	i1l148
  2678  021B  2A29               u82_20:
  2679  021C                     	line	159
  2680                           	
  2681                           i1l1270:	
  2682  021C                     ;main.c: 159:                     ps2Bits |= ( 1 << ps2BitsCount );
  2683                           	movlw	low(01h)
  2684  021C  3001               	movwf	(??_myIsr+0)+0
  2685  021D  008C               	incf	(_ps2BitsCount),w
  2686  021E  0A2E               	goto	u83_24
  2687  021F  2A22               u83_25:
  2688  0220                     	clrc
  2689  0220  1003               	rlf	(??_myIsr+0)+0,f
  2690  0221  0D8C               u83_24:
  2691  0222                     	addlw	-1
  2692  0222  3EFF               	skipz
  2693  0223  1D03               	goto	u83_25
  2694  0224  2A20               	movf	0+(??_myIsr+0)+0,w
  2695  0225  080C               	movwf	(??_myIsr+1)+0
  2696  0226  008D               	movf	(??_myIsr+1)+0,w
  2697  0227  080D               	iorwf	(_ps2Bits),f
  2698  0228  04AF               	line	160
  2699                           ;main.c: 160:                 }
  2700                           	
  2701                           i1l148:	
  2702  0229                     	line	161
  2703                           ;main.c: 161:                 ps2BitsCount++;
  2704                           	movlw	low(01h)
  2705  0229  3001               	movwf	(??_myIsr+0)+0
  2706  022A  008C               	movf	(??_myIsr+0)+0,w
  2707  022B  080C               	addwf	(_ps2BitsCount),f
  2708  022C  07AE               	line	162
  2709                           ;main.c: 162:             } else if ( ps2BitsCount == 8 ) {
  2710                           	goto	i1l1302
  2711  022D  2A8E               	
  2712                           i1l147:	
  2713  022E                     	
  2714                           i1l1272:	
  2715  022E                     		movlw	8
  2716  022E  3008               	xorwf	((_ps2BitsCount)),w
  2717  022F  062E               	btfss	status,2
  2718  0230  1D03               	goto	u84_21
  2719  0231  2A33               	goto	u84_20
  2720  0232  2A34               u84_21:
  2721  0233                     	goto	i1l1276
  2722  0233  2A39               u84_20:
  2723  0234                     	line	163
  2724                           	
  2725                           i1l1274:	
  2726  0234                     ;main.c: 163:                 ps2BitsCount++;
  2727                           	movlw	low(01h)
  2728  0234  3001               	movwf	(??_myIsr+0)+0
  2729  0235  008C               	movf	(??_myIsr+0)+0,w
  2730  0236  080C               	addwf	(_ps2BitsCount),f
  2731  0237  07AE               	line	164
  2732                           ;main.c: 164:             } else if ( ps2BitsCount == 9 ) {
  2733                           	goto	i1l1302
  2734  0238  2A8E               	
  2735                           i1l150:	
  2736  0239                     	
  2737                           i1l1276:	
  2738  0239                     		movlw	9
  2739  0239  3009               	xorwf	((_ps2BitsCount)),w
  2740  023A  062E               	btfss	status,2
  2741  023B  1D03               	goto	u85_21
  2742  023C  2A3E               	goto	u85_20
  2743  023D  2A3F               u85_21:
  2744  023E                     	goto	i1l1302
  2745  023E  2A8E               u85_20:
  2746  023F                     	line	165
  2747                           	
  2748                           i1l1278:	
  2749  023F                     ;main.c: 165:                 if ( ps2DataCount < 8 ) {
  2750                           	movf	(_ps2DataCount),w
  2751  023F  082D               	xorlw	80h
  2752  0240  3A80               	addlw	-((08h)^80h)
  2753  0241  3E78               	skipnc
  2754  0242  1803               	goto	u86_21
  2755  0243  2A45               	goto	u86_20
  2756  0244  2A46               u86_21:
  2757  0245                     	goto	i1l1284
  2758  0245  2A53               u86_20:
  2759  0246                     	line	166
  2760                           	
  2761                           i1l1280:	
  2762  0246                     ;main.c: 166:                     ps2Data[ps2DataCount] = ps2Bits;
  2763                           	movf	(_ps2Bits),w
  2764  0246  082F               	movwf	(??_myIsr+0)+0
  2765  0247  008C               	movf	(_ps2DataCount),w
  2766  0248  082D               	addlw	low(_ps2Data|((0x0)<<8))&0ffh
  2767  0249  3E1F               	movwf	fsr0
  2768  024A  0084               	movf	(??_myIsr+0)+0,w
  2769  024B  080C               	bcf	status, 7	;select IRP bank0
  2770  024C  1383               	movwf	indf
  2771  024D  0080               	line	167
  2772                           	
  2773                           i1l1282:	
  2774  024E                     ;main.c: 167:                     ps2DataCount++;
  2775                           	movlw	low(01h)
  2776  024E  3001               	movwf	(??_myIsr+0)+0
  2777  024F  008C               	movf	(??_myIsr+0)+0,w
  2778  0250  080C               	addwf	(_ps2DataCount),f
  2779  0251  07AD               	goto	i1l1284
  2780  0252  2A53               	line	168
  2781                           ;main.c: 168:                 }
  2782                           	
  2783                           i1l153:	
  2784  0253                     	line	169
  2785                           	
  2786                           i1l1284:	
  2787  0253                     ;main.c: 169:                 if ( ps2Bits == 0xF0 || ps2Bits == 0xE0 ) {
  2788                           		movlw	240
  2789  0253  30F0               	xorwf	((_ps2Bits)),w
  2790  0254  062F               	btfsc	status,2
  2791  0255  1903               	goto	u87_21
  2792  0256  2A58               	goto	u87_20
  2793  0257  2A59               u87_21:
  2794  0258                     	goto	i1l156
  2795  0258  2A5F               u87_20:
  2796  0259                     	
  2797                           i1l1286:	
  2798  0259                     		movlw	224
  2799  0259  30E0               	xorwf	((_ps2Bits)),w
  2800  025A  062F               	btfss	status,2
  2801  025B  1D03               	goto	u88_21
  2802  025C  2A5E               	goto	u88_20
  2803  025D  2A5F               u88_21:
  2804  025E                     	goto	i1l1288
  2805  025E  2A62               u88_20:
  2806  025F                     	
  2807                           i1l156:	
  2808  025F                     	line	170
  2809                           ;main.c: 170:                     ps2DataState = 1;
  2810                           	clrf	(_ps2DataState)
  2811  025F  01B0               	incf	(_ps2DataState),f
  2812  0260  0AB0               	line	171
  2813                           ;main.c: 171:                 } else {
  2814                           	goto	i1l1302
  2815  0261  2A8E               	
  2816                           i1l154:	
  2817  0262                     	line	172
  2818                           	
  2819                           i1l1288:	
  2820  0262                     ;main.c: 172:                     if ( ps2DataCount == 2 && ps2Data[1] == 0x12 ) {
  2821                           		movlw	2
  2822  0262  3002               	xorwf	((_ps2DataCount)),w
  2823  0263  062D               	btfss	status,2
  2824  0264  1D03               	goto	u89_21
  2825  0265  2A67               	goto	u89_20
  2826  0266  2A68               u89_21:
  2827  0267                     	goto	i1l1294
  2828  0267  2A71               u89_20:
  2829  0268                     	
  2830                           i1l1290:	
  2831  0268                     		movlw	18
  2832  0268  3012               	xorwf	(0+(_ps2Data)+01h),w
  2833  0269  0620               	btfss	status,2
  2834  026A  1D03               	goto	u90_21
  2835  026B  2A6D               	goto	u90_20
  2836  026C  2A6E               u90_21:
  2837  026D                     	goto	i1l1294
  2838  026D  2A71               u90_20:
  2839  026E                     	line	173
  2840                           	
  2841                           i1l1292:	
  2842  026E                     ;main.c: 173:                        ps2DataState = 1;
  2843                           	clrf	(_ps2DataState)
  2844  026E  01B0               	incf	(_ps2DataState),f
  2845  026F  0AB0               	line	174
  2846                           ;main.c: 174:                     } else if ( ps2Data[0] == 0xe1 && ps2DataCount < 8 ) {
                                 
  2847                           	goto	i1l1302
  2848  0270  2A8E               	
  2849                           i1l158:	
  2850  0271                     	
  2851                           i1l1294:	
  2852  0271                     		movlw	225
  2853  0271  30E1               	xorwf	((_ps2Data)),w
  2854  0272  061F               	btfss	status,2
  2855  0273  1D03               	goto	u91_21
  2856  0274  2A76               	goto	u91_20
  2857  0275  2A77               u91_21:
  2858  0276                     	goto	i1l1300
  2859  0276  2A81               u91_20:
  2860  0277                     	
  2861                           i1l1296:	
  2862  0277                     	movf	(_ps2DataCount),w
  2863  0277  082D               	xorlw	80h
  2864  0278  3A80               	addlw	-((08h)^80h)
  2865  0279  3E78               	skipnc
  2866  027A  1803               	goto	u92_21
  2867  027B  2A7D               	goto	u92_20
  2868  027C  2A7E               u92_21:
  2869  027D                     	goto	i1l1300
  2870  027D  2A81               u92_20:
  2871  027E                     	line	175
  2872                           	
  2873                           i1l1298:	
  2874  027E                     ;main.c: 175:                         ps2DataState = 1;
  2875                           	clrf	(_ps2DataState)
  2876  027E  01B0               	incf	(_ps2DataState),f
  2877  027F  0AB0               	line	176
  2878                           ;main.c: 176:                     } else {
  2879                           	goto	i1l1302
  2880  0280  2A8E               	
  2881                           i1l160:	
  2882  0281                     	line	177
  2883                           	
  2884                           i1l1300:	
  2885  0281                     ;main.c: 177:                         ps2DataState = 3;
  2886                           	movlw	low(03h)
  2887  0281  3003               	movwf	(??_myIsr+0)+0
  2888  0282  008C               	movf	(??_myIsr+0)+0,w
  2889  0283  080C               	movwf	(_ps2DataState)
  2890  0284  00B0               	goto	i1l1302
  2891  0285  2A8E               	line	178
  2892                           ;main.c: 178:                     }
  2893                           	
  2894                           i1l161:	
  2895  0286                     	goto	i1l1302
  2896  0286  2A8E               	
  2897                           i1l159:	
  2898  0287                     	goto	i1l1302
  2899  0287  2A8E               	line	179
  2900                           ;main.c: 179:                 }
  2901                           	
  2902                           i1l157:	
  2903  0288                     	goto	i1l1302
  2904  0288  2A8E               	line	180
  2905                           ;main.c: 180:             }
  2906                           	
  2907                           i1l152:	
  2908  0289                     	goto	i1l1302
  2909  0289  2A8E               	
  2910                           i1l151:	
  2911  028A                     	goto	i1l1302
  2912  028A  2A8E               	
  2913                           i1l149:	
  2914  028B                     	goto	i1l1302
  2915  028B  2A8E               	line	181
  2916                           ;main.c: 181:         }
  2917                           	
  2918                           i1l146:	
  2919  028C                     	goto	i1l1302
  2920  028C  2A8E               	
  2921                           i1l145:	
  2922  028D                     	goto	i1l1302
  2923  028D  2A8E               	line	182
  2924                           ;main.c: 182:     }
  2925                           	
  2926                           i1l140:	
  2927  028E                     	line	183
  2928                           	
  2929                           i1l1302:	
  2930  028E                     ;main.c: 183:     GIE = 1;
  2931                           	bsf	(95/8),(95)&7	;volatile
  2932  028E  178B               	line	184
  2933                           	
  2934                           i1l162:	
  2935  028F                     	movf	(??_myIsr+4),w
  2936  028F  0810               	movwf	pclath
  2937  0290  008A               	movf	(??_myIsr+3),w
  2938  0291  080F               	movwf	fsr0
  2939  0292  0084               	swapf	(??_myIsr+2)^00h,w
  2940  0293  0E0E               	movwf	status
  2941  0294  0083               	swapf	saved_w,f
  2942  0295  0ECE               	swapf	saved_w,w
  2943  0296  0E4E               	retfie
  2944  0297  0009               	opt stack 0
  2945                           GLOBAL	__end_of_myIsr
  2946                           	__end_of_myIsr:
  2947  0298                     	signat	_myIsr,89
  2948                           global	___latbits
  2949                           ___latbits	equ	0
  2950  0000                     	global	btemp
  2951                           	btemp set 04Eh
  2952  004E                     
  2953                           	DABS	1,78,2	;btemp
  2954                           	global	wtemp0
  2955                           	wtemp0 set btemp+0
  2956  004E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     19      48

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_keyDown
    _main->_keyUp
    _keyUp->_codeToMatrix
    _keyDown->_codeToMatrix

Critical Paths under _myIsr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1906
                            _keyDown
                              _keyUp
                        _replaceCode
                   _sendDataToAltera
 ---------------------------------------------------------------------------------
 (1) _sendDataToAltera                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _replaceCode                                          4     4      0      60
                                              5 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _keyUp                                                7     7      0     945
                                             12 BANK0      7     7      0
                       _codeToMatrix
                          _resetPort
                            _setPort
 ---------------------------------------------------------------------------------
 (2) _resetPort                                            4     4      0      44
                                              5 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _keyDown                                              7     7      0     901
                                             12 BANK0      7     7      0
                       _codeToMatrix
                            _setPort
 ---------------------------------------------------------------------------------
 (2) _setPort                                              4     4      0      44
                                              5 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _codeToMatrix                                         8     5      3     746
                                              5 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myIsr                                                5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keyDown
     _codeToMatrix
     _setPort
   _keyUp
     _codeToMatrix
     _resetPort
     _setPort
   _replaceCode
   _sendDataToAltera

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               42     13      30       3       72.7%
BITBANK0            42      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30       6        0.0%
ABS                  0      0      30       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              40      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Aug 06 21:25:17 2018

                        _i 002C                         l40 003B                         l41 0040  
                       l42 0045                         l35 00EA                         l51 0064  
                       l52 0065                         l44 004F                         l36 002C  
                       l37 0122                         l61 0084                         l62 0085  
                       l54 006F                         l46 0054                         l38 0031  
                       l71 00A4                         l47 0055                         l39 0036  
                       l72 00A5                         l64 008F                         l56 0074  
                       l81 00C4                         l57 0075                         l49 005F  
                       l82 00C5                         l74 00AF                         l66 0094  
                       l91 00E4                         l67 0095                         l59 007F  
                       l92 00E5                         l84 00CF                         l76 00B4  
                       l93 0127                         l77 00B5                         l69 009F  
                       l86 00D4                         l87 00D5                         l79 00BF  
                       l89 00DF                         fsr 0004                        l120 02FE  
                      l200 01DD                        l121 029E                        l201 0187  
                      l130 02B3                        l122 02A0                        l210 01D9  
                      l202 0186                        l131 02B8                        l123 02A2  
                      l211 01E4                        l203 01DC                        l132 02BD  
                      l124 02A4                        l212 01E5                        l204 01DB  
                      l133 02C2                        l125 02A6                        l213 01E5  
                      l205 01B7                        l118 02C7                        l134 02C4  
                      l126 02A8                        l206 01A5                        l135 0300  
                      l127 02AA                        l119 029C                        l207 01B6  
                      l128 02AC                        l208 01DA                        l129 02AE  
                      l209 01C8                        l171 0361                        l172 0378  
                      l165 03B5                        l173 0378                        l181 03C9  
                      l168 0397                        l176 0325                        l192 0143  
                      l177 033C                        l193 01E2                        l178 033C  
                      l194 0152                        l195 01DE                        l196 016F  
                      l197 0162                        l198 016E                        l199 016D  
                      _GIE 005F                        u600 008A                        u601 0089  
                      u610 009A                        u611 0099                        u620 00AA  
                      u700 035E                        u621 00A9                        u701 035D  
                      u630 00BA                        u710 0375                        u631 00B9  
                      u711 0374                        u640 00CA                        u560 004A  
                      u720 0322                        u641 00C9                        u561 0049  
                      u721 0321                        u650 00DA                        u570 005A  
                      u730 0339                        u651 00D9                        u571 0059  
                      u731 0338                        u580 006A                        u581 0069  
                      u590 007A                        u591 0079                        _PSA 040B  
                      u665 039F                        u674 03A9                        u930 014A  
                      u675 03A7                        u931 0149                        u940 014F  
                      u685 0380                        u941 014E                        u694 038A  
                      u950 0159                        u695 0388                        u951 0158  
                      u960 015F                        u961 015E                        u970 0169  
                      u971 0168                        u980 0176                        u981 0175  
                      u990 017C                        u991 017B                        fsr0 0004  
                      indf 0000                       l1110 004F                       l1120 006A  
                     l1112 0055                       l1104 002B                       l1200 02AC  
                     l1130 0085                       l1122 006F                       l1114 005A  
                     l1106 0045                       l1210 02C2                       l1202 02AE  
                     l1140 009F                       l1132 008A                       l1124 0075  
                     l1116 005F                       l1108 004A                       l1220 0300  
                     l1212 02C4                       l1204 02B3                       l1150 00BA  
                     l1142 00A5                       l1134 008F                       l1126 007A  
                     l1118 0065                       l1230 035E                       l1214 02C6  
                     l1206 02B8                       l1310 0135                       l1160 00D5  
                     l1152 00BF                       l1144 00AA                       l1136 0095  
                     l1128 007F                       l1232 0361                       l1240 0322  
                     l1208 02BD                       l1216 02C7                       l1320 013B  
                     l1312 0137                       l1304 0128                       l1162 00DA  
                     l1154 00C5                       l1146 00AF                       l1138 009A  
                     l1170 0122                       l1234 0375                       l1226 033F  
                     l1242 0325                       l1218 02FE                       l1330 0152  
                     l1322 013C                       l1314 0138                       l1306 012E  
                     l1172 0127                       l1164 00DF                       l1156 00CA  
                     l1148 00B5                       l1228 0352                       l1180 037B  
                     l1244 0339                       l1236 0303                       l1332 0159  
                     l1340 016F                       l1324 0143                       l1316 0139  
                     l1308 0132                       l1166 00E5                       l1158 00CF  
                     l1238 0316                       l1422 02CF                       l1190 02A2  
                     l1182 029A                       l1350 018F                       l1342 0176  
                     l1334 015F                       l1326 014A                       l1318 013A  
                     l1424 00F3                       l1168 00EA                       l1192 02A4  
                     l1184 029C                       l1360 01AC                       l1352 0195  
                     l1344 017C                       l1336 0162                       l1328 014F  
                     l1178 039A                       l1194 02A6                       l1186 029E  
                     l1370 01C8                       l1362 01B2                       l1354 019B  
                     l1346 0182                       l1338 0169                       l1196 02A8  
                     l1188 02A0                       l1380 01E1                       l1372 01CF  
                     l1356 01A1                       l1364 01B7                       l1348 0187  
                     l1198 02AA                       l1374 01D5                       l1366 01BE  
                     l1358 01A5                       l1368 01C4                       l1376 01DE  
                     l1378 01E0                       _T0IE 005D                       u1000 0182  
                     _T0IF 005A                       u1001 0181                       _T0CS 040D  
                     u1010 018F                       u1011 018E                       u1100 01D5  
                     u1020 0195                       u1101 01D4                       u1021 0194  
                     u1030 019B                       u1031 019A                       u1040 01A1  
                     u1041 01A0                       u1050 01AC                       u1051 01AB  
                     u1060 01B2                       u1061 01B1                       u1070 01BE  
                     u1071 01BD                       u1080 01C4                       u1081 01C3  
                     u1090 01CF                       u1091 01CE                       _T0SE 040C  
                     _TMR0 0001                       _main 0128                       btemp 004E  
                     start 000D                      ?_main 000C                      i1l140 028E  
                    i1l141 020B                      i1l150 0239                      i1l151 028A  
                    i1l143 01FB                      i1l152 0289                      i1l160 0281  
                    i1l144 020A                      i1l145 028D                      i1l161 0286  
                    i1l153 0253                      i1l162 028F                      i1l146 028C  
                    i1l154 0262                      i1l147 022E                      i1l156 025F  
                    i1l148 0229                      i1l149 028B                      i1l157 0288  
                    i1l158 0271                      i1l159 0287                      _PORTA 0005  
                    _PORTB 0006       __end_of_codeToMatrix 0128                      u80_20 0211  
                    u80_21 0210                      u81_20 0218                      u81_21 0217  
                    _TRISB 0086                      u90_20 026E                      u82_20 021C  
                    u74_20 01EA                      u90_21 026D                      u82_21 021B  
                    u74_21 01E9                      u91_20 0277                      u75_20 01EE  
                    u91_21 0276                      u75_21 01ED                      u83_24 0222  
                    u83_25 0220                      u92_20 027E                      u84_20 0234  
                    u76_20 01F6                      u92_21 027D                      u84_21 0233  
                    u76_21 01F5                      u85_20 023F                      u77_20 01FB  
                    u85_21 023E                      u77_21 01FA                      u86_20 0246  
                    u78_20 01FF                      u86_21 0245                      u78_21 01FE  
                    u87_20 0259                      u79_20 0203                      u87_21 0258  
                    u79_21 0202                      u88_20 025F                      u88_21 025E  
                    u89_20 0268                      u89_21 0267            __end_of_keyDown 0379  
                    _keyUp 0301                      _myIsr 01E6                      _shift 002B  
          __end_of_setPort 03B6                      pclath 000A                      status 0003  
                    wtemp0 004E            replaceCode@code 0013            __initialization 000E  
             __end_of_main 01E6                     ??_main 0000                     ?_keyUp 000C  
             ?_replaceCode 000C                     ?_myIsr 000C                     i1l1300 0281  
                   i1l1302 028E                     i1l1250 01EE                     i1l1260 0203  
                   i1l1252 01EF                     i1l1270 021C                     i1l1262 0205  
                   i1l1254 01F1                     i1l1246 01E6                     i1l1280 0246  
                   i1l1272 022E                     i1l1264 020B                     i1l1256 01F6  
                   i1l1248 01EA                     i1l1290 0268                     i1l1282 024E  
                   i1l1274 0234                     i1l1266 0211                     i1l1258 01FF  
                   i1l1292 026E                     i1l1284 0253                     i1l1276 0239  
                   i1l1268 0218                     i1l1294 0271                     i1l1286 0259  
                   i1l1278 023F                     i1l1296 0277                     i1l1288 0262  
                   i1l1298 027E                     _TRISA0 0428                     _TRISA1 0429  
                   _TRISA2 042A                     _TRISA3 042B                     _TRISA4 042C  
 __end_of_sendDataToAltera 03CA                     keyUp@c 001D                  ??_keyDown 0018  
                   saved_w 004E                  ??_setPort 0011    __end_of__initialization 0029  
           __pcstackCOMMON 0000               __pidataBANK0 03B6              __end_of_keyUp 033D  
            __end_of_myIsr 0298      __size_of_codeToMatrix 00FD                    ??_keyUp 0018  
                  ??_myIsr 000C               _ps2DataCount 002D               _ps2DataState 0030  
               __pbssBANK0 001F               _ps2BitsCount 002E               _codeToMatrix 002B  
               __pmaintext 0128                 __pintentry 0004         __size_of_resetPort 001F  
     __size_of_replaceCode 0069                    _ps2Data 001F                    _ps2Bits 002F  
                  __ptext1 03C9                    __ptext2 0298                    __ptext3 0301  
                  __ptext4 0379                    __ptext5 033D                    __ptext6 0398  
                  __ptext7 002B                    __ptext8 01E6                    _keyCode 0027  
                  _keyDown 033D                    _setPort 0398                    _numLock 0029  
                  clrloop0 03C2       end_of_initialization 0029          __end_of_resetPort 0398  
        ?_sendDataToAltera 000C         ??_sendDataToAltera 0000                  _PORTAbits 0005  
            setPort@bit_id 0014                 keyDown@key 001C        start_initialization 000E  
            codeToMatrix@c 0012              codeToMatrix@k 000C              codeToMatrix@n 0013  
            codeToMatrix@r 0016              codeToMatrix@s 0011                __pdataBANK0 0031  
                ___latbits 0000              __pcstackBANK0 000C            resetPort@bit_id 0014  
                 ?_keyDown 000C                   ?_setPort 000C              ??_replaceCode 0011  
           __size_of_keyUp 003C             __size_of_myIsr 00B2          interrupt_function 0004  
                clear_ram0 03C1                  _resetPort 0379  __size_of_sendDataToAltera 0001  
             replaceCode@r 0014        __end_of_replaceCode 0301                 ?_resetPort 000C  
                 _capsLock 002A           __size_of_keyDown 003C           __size_of_setPort 001E  
            __size_of_main 00BE              ?_codeToMatrix 0011                   _outPorts 0031  
                 keyDown@c 001D                   keyUp@key 001C                _replaceCode 0298  
                 intlevel1 0000             ??_codeToMatrix 0014                ??_resetPort 0011  
         _sendDataToAltera 03C9  
